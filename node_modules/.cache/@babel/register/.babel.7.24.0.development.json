{"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _redis = _interopRequireDefault(require(\"./utils/redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        console.log(_redis[\"default\"].isAlive());\n        _context2.t0 = console;\n        _context2.next = 4;\n        return _redis[\"default\"].get('myKey');\n      case 4:\n        _context2.t1 = _context2.sent;\n        _context2.t0.log.call(_context2.t0, _context2.t1);\n        _context2.next = 8;\n        return _redis[\"default\"].set('myKey', 12, 5);\n      case 8:\n        _context2.t2 = console;\n        _context2.next = 11;\n        return _redis[\"default\"].get('myKey');\n      case 11:\n        _context2.t3 = _context2.sent;\n        _context2.t2.log.call(_context2.t2, _context2.t3);\n        setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = console;\n                _context.next = 3;\n                return _redis[\"default\"].get('myKey');\n              case 3:\n                _context.t1 = _context.sent;\n                _context.t0.log.call(_context.t0, _context.t1);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })), 1000 * 10);\n      case 14:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _callee2);\n}))();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_redis","_interopRequireDefault","require","obj","__esModule","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_callee2","_callee2$","_context2","console","log","redisClient","isAlive","t0","get","t1","set","t2","t3","setTimeout","_callee","_callee$","_context"],"sourceRoot":"/home/ali/ali/alx-files_manager/","sources":["main.js"],"sourcesContent":["import redisClient from './utils/redis';\n\n(async () => {\n    console.log(redisClient.isAlive());\n    console.log(await redisClient.get('myKey'));\n    await redisClient.set('myKey', 12, 5);\n    console.log(await redisClient.get('myKey'));\n\n    setTimeout(async () => {\n        console.log(await redisClient.get('myKey'));\n    }, 1000*10)\n})();\n"],"mappings":"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","ignoreList":[]}},"mtime":1710102802168},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/utils/redis.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _redis = _interopRequireDefault(require(\"redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // utils/redis.js\nvar RedisClient = /*#__PURE__*/function () {\n  function RedisClient() {\n    _classCallCheck(this, RedisClient);\n    this.client = _redis[\"default\"].createClient();\n    this.client.on('error', function (err) {\n      console.error(\"Redis client error: \".concat(err));\n    });\n  }\n  _createClass(RedisClient, [{\n    key: \"isAlive\",\n    value: function isAlive() {\n      return this.client.connected;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n        var _this = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this.client.get(key, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, value, duration) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this2.client.setex(key, duration, value, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function set(_x2, _x3, _x4) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(key) {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this3.client.del(key, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function del(_x5) {\n        return _del.apply(this, arguments);\n      }\n      return del;\n    }()\n  }]);\n  return RedisClient;\n}();\nvar redisClient = new RedisClient();\nvar _default = exports[\"default\"] = redisClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVkaXMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZSIsInQiLCJyIiwiT2JqZWN0IiwibiIsImhhc093blByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJhIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ3cmFwIiwiR2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsInR5cGUiLCJhcmciLCJjYWxsIiwiaCIsImwiLCJmIiwicyIsInkiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwicCIsImQiLCJnZXRQcm90b3R5cGVPZiIsInYiLCJ2YWx1ZXMiLCJnIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiaW52b2tlIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJuYW1lIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJfY2F0Y2giLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJpbmZvIiwiZXJyb3IiLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsIl90b1Byb3BlcnR5S2V5IiwiX2NyZWF0ZUNsYXNzIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwidG9QcmltaXRpdmUiLCJOdW1iZXIiLCJSZWRpc0NsaWVudCIsImNsaWVudCIsInJlZGlzIiwiY3JlYXRlQ2xpZW50Iiwib24iLCJjb25zb2xlIiwiY29uY2F0IiwiaXNBbGl2ZSIsImNvbm5lY3RlZCIsIl9nZXQiLCJfY2FsbGVlIiwiX3RoaXMiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwiZ2V0IiwicmVwbHkiLCJfeCIsIl9zZXQiLCJfY2FsbGVlMiIsImR1cmF0aW9uIiwiX3RoaXMyIiwiX2NhbGxlZTIkIiwiX2NvbnRleHQyIiwic2V0ZXgiLCJzZXQiLCJfeDIiLCJfeDMiLCJfeDQiLCJfZGVsIiwiX2NhbGxlZTMiLCJfdGhpczMiLCJfY2FsbGVlMyQiLCJfY29udGV4dDMiLCJkZWwiLCJfeDUiLCJyZWRpc0NsaWVudCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL2hvbWUvYWxpL2FsaS9hbHgtZmlsZXNfbWFuYWdlci91dGlscy8iLCJzb3VyY2VzIjpbInJlZGlzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL3JlZGlzLmpzXG5cbmltcG9ydCByZWRpcyBmcm9tICdyZWRpcyc7XG5cbmNsYXNzIFJlZGlzQ2xpZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jbGllbnQgPSByZWRpcy5jcmVhdGVDbGllbnQoKTtcblxuICAgIHRoaXMuY2xpZW50Lm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFJlZGlzIGNsaWVudCBlcnJvcjogJHtlcnJ9YCk7XG4gICAgfSk7XG4gIH1cblxuICBpc0FsaXZlKCkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5jb25uZWN0ZWQ7XG4gIH1cblxuICBhc3luYyBnZXQoa2V5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuY2xpZW50LmdldChrZXksIChlcnJvciwgcmVwbHkpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJlcGx5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBzZXQoa2V5LCB2YWx1ZSwgZHVyYXRpb24pIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5jbGllbnQuc2V0ZXgoa2V5LCBkdXJhdGlvbiwgdmFsdWUsIChlcnJvciwgcmVwbHkpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJlcGx5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBkZWwoa2V5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuY2xpZW50LmRlbChrZXksIChlcnJvciwgcmVwbHkpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKHJlcGx5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuY29uc3QgcmVkaXNDbGllbnQgPSBuZXcgUmVkaXNDbGllbnQoKTtcbmV4cG9ydCBkZWZhdWx0IHJlZGlzQ2xpZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBMEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLFFBQUFDLENBQUEsc0NBQUFELE9BQUEsd0JBQUFFLE1BQUEsdUJBQUFBLE1BQUEsQ0FBQUMsUUFBQSxhQUFBRixDQUFBLGtCQUFBQSxDQUFBLGdCQUFBQSxDQUFBLFdBQUFBLENBQUEseUJBQUFDLE1BQUEsSUFBQUQsQ0FBQSxDQUFBRyxXQUFBLEtBQUFGLE1BQUEsSUFBQUQsQ0FBQSxLQUFBQyxNQUFBLENBQUFHLFNBQUEscUJBQUFKLENBQUEsS0FBQUQsT0FBQSxDQUFBQyxDQUFBO0FBQUEsU0FBQUssb0JBQUEsa0JBRDFCLHFKQUFBQSxtQkFBQSxZQUFBQSxvQkFBQSxXQUFBQyxDQUFBLFNBQUFDLENBQUEsRUFBQUQsQ0FBQSxPQUFBRSxDQUFBLEdBQUFDLE1BQUEsQ0FBQUwsU0FBQSxFQUFBTSxDQUFBLEdBQUFGLENBQUEsQ0FBQUcs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","map":{"version":3,"names":["_redis","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","RedisClient","client","redis","createClient","on","console","concat","isAlive","connected","_get","_callee","_this","_callee$","_context","get","reply","_x","_set","_callee2","duration","_this2","_callee2$","_context2","setex","set","_x2","_x3","_x4","_del","_callee3","_this3","_callee3$","_context3","del","_x5","redisClient","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/utils/","sources":["redis.js"],"sourcesContent":["// utils/redis.js\n\nimport redis from 'redis';\n\nclass RedisClient {\n  constructor() {\n    this.client = redis.createClient();\n\n    this.client.on('error', (err) => {\n      console.error(`Redis client error: ${err}`);\n    });\n  }\n\n  isAlive() {\n    return this.client.connected;\n  }\n\n  async get(key) {\n    return new Promise((resolve, reject) => {\n      this.client.get(key, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n\n  async set(key, value, duration) {\n    return new Promise((resolve, reject) => {\n      this.client.setex(key, duration, value, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n\n  async del(key) {\n    return new Promise((resolve, reject) => {\n      this.client.del(key, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n}\n\nconst redisClient = new RedisClient();\nexport default redisClient;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710340967007},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/utils/redis.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _redis = _interopRequireDefault(require(\"redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // utils/redis.js\nvar RedisClient = /*#__PURE__*/function () {\n  function RedisClient() {\n    _classCallCheck(this, RedisClient);\n    this.client = _redis[\"default\"].createClient();\n    this.client.on('error', function (err) {\n      console.error(\"Redis client error: \".concat(err));\n    });\n  }\n  _createClass(RedisClient, [{\n    key: \"isAlive\",\n    value: function isAlive() {\n      return this.client.connected;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n        var _this = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this.client.get(key, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, value, duration) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this2.client.setex(key, duration, value, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function set(_x2, _x3, _x4) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(key) {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                _this3.client.del(key, function (error, reply) {\n                  if (error) {\n                    reject(error);\n                  } else {\n                    resolve(reply);\n                  }\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function del(_x5) {\n        return _del.apply(this, arguments);\n      }\n      return del;\n    }()\n  }]);\n  return RedisClient;\n}();\nvar redisClient = new RedisClient();\nvar _default = exports[\"default\"] = redisClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_redis","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","RedisClient","client","redis","createClient","on","console","concat","isAlive","connected","_get","_callee","_this","_callee$","_context","get","reply","_x","_set","_callee2","duration","_this2","_callee2$","_context2","setex","set","_x2","_x3","_x4","_del","_callee3","_this3","_callee3$","_context3","del","_x5","redisClient","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/utils/","sources":["redis.js"],"sourcesContent":["// utils/redis.js\n\nimport redis from 'redis';\n\nclass RedisClient {\n  constructor() {\n    this.client = redis.createClient();\n\n    this.client.on('error', (err) => {\n      console.error(`Redis client error: ${err}`);\n    });\n  }\n\n  isAlive() {\n    return this.client.connected;\n  }\n\n  async get(key) {\n    return new Promise((resolve, reject) => {\n      this.client.get(key, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n\n  async set(key, value, duration) {\n    return new Promise((resolve, reject) => {\n      this.client.setex(key, duration, value, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n\n  async del(key) {\n    return new Promise((resolve, reject) => {\n      this.client.del(key, (error, reply) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(reply);\n        }\n      });\n    });\n  }\n}\n\nconst redisClient = new RedisClient();\nexport default redisClient;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710340967007},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/1_main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _db = _interopRequireDefault(require(\"./utils/db\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar waitConnection = function waitConnection() {\n  return new Promise(function (resolve, reject) {\n    var i = 0;\n    var repeatFct = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setTimeout(function () {\n                i += 1;\n                if (i >= 10) {\n                  reject();\n                } else if (!_db[\"default\"].isAlive()) {\n                  repeatFct();\n                } else {\n                  resolve();\n                }\n              }, 1000);\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function repeatFct() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    repeatFct();\n  });\n};\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        console.log(_db[\"default\"].isAlive());\n        _context2.next = 3;\n        return waitConnection();\n      case 3:\n        console.log(_db[\"default\"].isAlive());\n        _context2.t0 = console;\n        _context2.next = 7;\n        return _db[\"default\"].nbUsers();\n      case 7:\n        _context2.t1 = _context2.sent;\n        _context2.t0.log.call(_context2.t0, _context2.t1);\n        _context2.t2 = console;\n        _context2.next = 12;\n        return _db[\"default\"].nbFiles();\n      case 12:\n        _context2.t3 = _context2.sent;\n        _context2.t2.log.call(_context2.t2, _context2.t3);\n      case 14:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _callee2);\n}))();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_db","_interopRequireDefault","require","obj","__esModule","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","waitConnection","repeatFct","_ref","_callee","_callee$","_context","setTimeout","dbClient","isAlive","_callee2","_callee2$","_context2","console","log","t0","nbUsers","t1","t2","nbFiles","t3"],"sourceRoot":"/home/ali/ali/alx-files_manager/","sources":["1_main.js"],"sourcesContent":["import dbClient from './utils/db';\n\nconst waitConnection = () => {\n    return new Promise((resolve, reject) => {\n        let i = 0;\n        const repeatFct = async () => {\n            await setTimeout(() => {\n                i += 1;\n                if (i >= 10) {\n                    reject()\n                }\n                else if(!dbClient.isAlive()) {\n                    repeatFct()\n                }\n                else {\n                    resolve()\n                }\n            }, 1000);\n        };\n        repeatFct();\n    })\n};\n\n(async () => {\n    console.log(dbClient.isAlive());\n    await waitConnection();\n    console.log(dbClient.isAlive());\n    console.log(await dbClient.nbUsers());\n    console.log(await dbClient.nbFiles());\n})();"],"mappings":"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","ignoreList":[]}},"mtime":1710104378518},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/utils/db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _mongodb = require(\"mongodb\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // utils/db.js\nvar DBClient = /*#__PURE__*/function () {\n  function DBClient() {\n    var _this = this;\n    _classCallCheck(this, DBClient);\n    this.host = process.env.DB_HOST || 'localhost';\n    this.port = process.env.DB_PORT || 27017;\n    this.database = process.env.DB_DATABASE || 'files_manager';\n    this.client = new _mongodb.MongoClient(\"mongodb://\".concat(this.host, \":\").concat(this.port), {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    this.connectPromise = new Promise(function (resolve, reject) {\n      _this.client.connect(function (err) {\n        if (err) {\n          console.error(\"DB Connection Error: \".concat(err));\n          reject(err);\n        } else {\n          console.log('DB Connected');\n          resolve();\n        }\n      });\n    });\n  }\n  _createClass(DBClient, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.connectPromise;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"isAlive\",\n    value: function isAlive() {\n      return !!this.client && this.client.isConnected();\n    }\n  }, {\n    key: \"nbUsers\",\n    value: function () {\n      var _nbUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var usersCollection, userCount;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.connect();\n            case 2:\n              usersCollection = this.client.db(this.database).collection('users');\n              _context2.next = 5;\n              return usersCollection.countDocuments();\n            case 5:\n              userCount = _context2.sent;\n              return _context2.abrupt(\"return\", userCount);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function nbUsers() {\n        return _nbUsers.apply(this, arguments);\n      }\n      return nbUsers;\n    }()\n  }, {\n    key: \"nbFiles\",\n    value: function () {\n      var _nbFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var filesCollection, filesCount;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.connect();\n            case 2:\n              filesCollection = this.client.db(this.database).collection('files');\n              _context3.next = 5;\n              return filesCollection.countDocuments();\n            case 5:\n              filesCount = _context3.sent;\n              return _context3.abrupt(\"return\", filesCount);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function nbFiles() {\n        return _nbFiles.apply(this, arguments);\n      }\n      return nbFiles;\n    }()\n  }]);\n  return DBClient;\n}();\nvar dbClient = new DBClient();\nvar _default = exports[\"default\"] = dbClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_mongodb","require","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","DBClient","_this","host","process","env","DB_HOST","port","DB_PORT","database","DB_DATABASE","client","MongoClient","concat","useNewUrlParser","useUnifiedTopology","connectPromise","connect","console","log","_connect","_callee","_callee$","_context","isAlive","isConnected","_nbUsers","_callee2","usersCollection","userCount","_callee2$","_context2","db","collection","countDocuments","nbUsers","_nbFiles","_callee3","filesCollection","filesCount","_callee3$","_context3","nbFiles","dbClient","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/utils/","sources":["db.js"],"sourcesContent":["// utils/db.js\n\nimport { MongoClient } from 'mongodb';\n\nclass DBClient {\n  constructor() {\n    this.host = process.env.DB_HOST || 'localhost';\n    this.port = process.env.DB_PORT || 27017;\n    this.database = process.env.DB_DATABASE || 'files_manager';\n    this.client = new MongoClient(`mongodb://${this.host}:${this.port}`, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    this.connectPromise = new Promise((resolve, reject) => {\n      this.client.connect((err) => {\n        if (err) {\n          console.error(`DB Connection Error: ${err}`);\n          reject(err);\n        } else {\n          console.log('DB Connected');\n          resolve();\n        }\n      });\n    });\n  }\n\n  async connect() {\n    await this.connectPromise;\n  }\n\n  isAlive() {\n    return !!this.client && this.client.isConnected();\n  }\n\n  async nbUsers() {\n    await this.connect();\n    const usersCollection = this.client.db(this.database).collection('users');\n    const userCount = await usersCollection.countDocuments();\n    return userCount;\n  }\n\n  async nbFiles() {\n    await this.connect();\n    const filesCollection = this.client.db(this.database).collection('files');\n    const filesCount = await filesCollection.countDocuments();\n    return filesCount;\n  }\n}\n\nconst dbClient = new DBClient();\nexport default dbClient;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710340963707},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// server.js\n\nvar app = (0, _express[\"default\"])();\nvar port = process.env.PORT || 5000;\napp.use(_express[\"default\"].json());\n(0, _index[\"default\"])(app);\napp.listen(port, function () {\n  console.log(\"Server running on port \".concat(port));\n});\nvar _default = exports[\"default\"] = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2luZGV4Iiwib2JqIiwiX19lc01vZHVsZSIsImFwcCIsImV4cHJlc3MiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJqc29uIiwiY29udHJvbGxlclJvdXRpbmciLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiY29uY2F0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9hbGkvYWxpL2FseC1maWxlc19tYW5hZ2VyLyIsInNvdXJjZXMiOlsic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNlcnZlci5qc1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb250cm9sbGVyUm91dGluZyBmcm9tICcuL3JvdXRlcy9pbmRleCc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDUwMDA7XG5cbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG5jb250cm9sbGVyUm91dGluZyhhcHApO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUErQyxTQUFBRCx1QkFBQUcsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLGdCQUFBQSxHQUFBO0FBSC9DOztBQUtBLElBQU1FLEdBQUcsR0FBRyxJQUFBQyxtQkFBTyxFQUFDLENBQUM7QUFDckIsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUk7QUFFckNMLEdBQUcsQ0FBQ00sR0FBRyxDQUFDTCxtQkFBTyxDQUFDTSxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBRXZCLElBQUFDLGlCQUFpQixFQUFDUixHQUFHLENBQUM7QUFFdEJBLEdBQUcsQ0FBQ1MsTUFBTSxDQUFDUCxJQUFJLEVBQUUsWUFBTTtFQUNyQlEsT0FBTyxDQUFDQyxHQUFHLDJCQUFBQyxNQUFBLENBQTJCVixJQUFJLENBQUUsQ0FBQztBQUMvQyxDQUFDLENBQUM7QUFBQyxJQUFBVyxRQUFBLEdBQUFDLE9BQUEsY0FFWWQsR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_express","_interopRequireDefault","require","_index","obj","__esModule","app","express","port","process","env","PORT","use","json","controllerRouting","listen","console","log","concat","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/","sources":["server.js"],"sourcesContent":["// server.js\n\nimport express from 'express';\nimport controllerRouting from './routes/index';\n\nconst app = express();\nconst port = process.env.PORT || 5000;\n\napp.use(express.json());\n\ncontrollerRouting(app);\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n\nexport default app;"],"mappings":";;;;;;AAEA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA+C,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAH/C;;AAKA,IAAME,GAAG,GAAG,IAAAC,mBAAO,EAAC,CAAC;AACrB,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErCL,GAAG,CAACM,GAAG,CAACL,mBAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AAEvB,IAAAC,iBAAiB,EAACR,GAAG,CAAC;AAEtBA,GAAG,CAACS,MAAM,CAACP,IAAI,EAAE,YAAM;EACrBQ,OAAO,CAACC,GAAG,2BAAAC,MAAA,CAA2BV,IAAI,CAAE,CAAC;AAC/C,CAAC,CAAC;AAAC,IAAAW,QAAA,GAAAC,OAAA,cAEYd,GAAG","ignoreList":[]}},"mtime":1710341129997},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/routes/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = require(\"express\");\nvar _AppController = _interopRequireDefault(require(\"../controllers/AppController\"));\nvar _UsersController = _interopRequireDefault(require(\"../controllers/UsersController\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// eslint-disable-next-line no-unused-vars\n\n// import AuthController from '../controllers/AuthController';\n// import FilesController from '../controllers/FilesController';\n\nvar router = (0, _express.Router)();\nrouter.get('/status', _AppController[\"default\"].getStatus);\nrouter.get('/stats', _AppController[\"default\"].getStats);\nrouter.post('/users', function (req, res) {\n  _UsersController[\"default\"].postNew(req, res);\n});\nrouter.get('/users/me', function (req, res) {\n  _UsersController[\"default\"].getMe(req, res);\n});\n\n// router.get('/connect', AuthController.getConnect);\n// router.get('/disconnect', AuthController.getDisconnect);\n// router.get('/users/me', UsersController.getMe);\n\n// router.post('/files', FilesController.postUpload);\n\n// router.get('/files/:id', FilesController.getShow);\n// router.get('/files', FilesController.getIndex);\n\n// router.put('/files/:id/publish', FilesController.putPublish);\n// router.put('/files/:id/unpublish', FilesController.putUnpublish);\n\n// router.get('/files/:id/data', FilesController.getFile);\nvar _default = exports[\"default\"] = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfQXBwQ29udHJvbGxlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfVXNlcnNDb250cm9sbGVyIiwib2JqIiwiX19lc01vZHVsZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsIkFwcENvbnRyb2xsZXIiLCJnZXRTdGF0dXMiLCJnZXRTdGF0cyIsInBvc3QiLCJyZXEiLCJyZXMiLCJVc2Vyc0NvbnRyb2xsZXIiLCJwb3N0TmV3IiwiZ2V0TWUiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL2FsaS9hbGkvYWx4LWZpbGVzX21hbmFnZXIvcm91dGVzLyIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IEFwcENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvQXBwQ29udHJvbGxlcic7XG5pbXBvcnQgVXNlcnNDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL1VzZXJzQ29udHJvbGxlcic7XG4vLyBpbXBvcnQgQXV0aENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvQXV0aENvbnRyb2xsZXInO1xuLy8gaW1wb3J0IEZpbGVzQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9GaWxlc0NvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxucm91dGVyLmdldCgnL3N0YXR1cycsIEFwcENvbnRyb2xsZXIuZ2V0U3RhdHVzKTtcbnJvdXRlci5nZXQoJy9zdGF0cycsIEFwcENvbnRyb2xsZXIuZ2V0U3RhdHMpO1xuXG5yb3V0ZXIucG9zdCgnL3VzZXJzJywgKHJlcSwgcmVzKSA9PiB7XG4gIFVzZXJzQ29udHJvbGxlci5wb3N0TmV3KHJlcSwgcmVzKTtcbn0pO1xucm91dGVyLmdldCgnL3VzZXJzL21lJywgKHJlcSwgcmVzKSA9PiB7XG4gIFVzZXJzQ29udHJvbGxlci5nZXRNZShyZXEsIHJlcyk7XG59KTtcblxuLy8gcm91dGVyLmdldCgnL2Nvbm5lY3QnLCBBdXRoQ29udHJvbGxlci5nZXRDb25uZWN0KTtcbi8vIHJvdXRlci5nZXQoJy9kaXNjb25uZWN0JywgQXV0aENvbnRyb2xsZXIuZ2V0RGlzY29ubmVjdCk7XG4vLyByb3V0ZXIuZ2V0KCcvdXNlcnMvbWUnLCBVc2Vyc0NvbnRyb2xsZXIuZ2V0TWUpO1xuXG4vLyByb3V0ZXIucG9zdCgnL2ZpbGVzJywgRmlsZXNDb250cm9sbGVyLnBvc3RVcGxvYWQpO1xuXG4vLyByb3V0ZXIuZ2V0KCcvZmlsZXMvOmlkJywgRmlsZXNDb250cm9sbGVyLmdldFNob3cpO1xuLy8gcm91dGVyLmdldCgnL2ZpbGVzJywgRmlsZXNDb250cm9sbGVyLmdldEluZGV4KTtcblxuLy8gcm91dGVyLnB1dCgnL2ZpbGVzLzppZC9wdWJsaXNoJywgRmlsZXNDb250cm9sbGVyLnB1dFB1Ymxpc2gpO1xuLy8gcm91dGVyLnB1dCgnL2ZpbGVzLzppZC91bnB1Ymxpc2gnLCBGaWxlc0NvbnRyb2xsZXIucHV0VW5wdWJsaXNoKTtcblxuLy8gcm91dGVyLmdldCgnL2ZpbGVzLzppZC9kYXRhJywgRmlsZXNDb250cm9sbGVyLmdldEZpbGUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLGNBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLGdCQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBNkQsU0FBQUUsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUo3RDs7QUFLQTtBQUNBOztBQUVBLElBQU1FLE1BQU0sR0FBRyxJQUFBQyxlQUFNLEVBQUMsQ0FBQztBQUV2QkQsTUFBTSxDQUFDRSxHQUFHLENBQUMsU0FBUyxFQUFFQyx5QkFBYSxDQUFDQyxTQUFTLENBQUM7QUFDOUNKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFFBQVEsRUFBRUMseUJBQWEsQ0FBQ0UsUUFBUSxDQUFDO0FBRTVDTCxNQUFNLENBQUNNLElBQUksQ0FBQyxRQUFRLEVBQUUsVUFBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUs7RUFDbENDLDJCQUFlLENBQUNDLE9BQU8sQ0FBQ0gsR0FBRyxFQUFFQyxHQUFHLENBQUM7QUFDbkMsQ0FBQyxDQUFDO0FBQ0ZSLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFdBQVcsRUFBRSxVQUFDSyxHQUFHLEVBQUVDLEdBQUcsRUFBSztFQUNwQ0MsMkJBQWUsQ0FBQ0UsS0FBSyxDQUFDSixHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUNqQyxDQUFDLENBQUM7O0FBRUY7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUFBLElBQUFJLFFBQUEsR0FBQUMsT0FBQSxjQUVlYixNQUFNIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["_express","require","_AppController","_interopRequireDefault","_UsersController","obj","__esModule","router","Router","get","AppController","getStatus","getStats","post","req","res","UsersController","postNew","getMe","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/routes/","sources":["index.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n\nimport { Router } from 'express';\nimport AppController from '../controllers/AppController';\nimport UsersController from '../controllers/UsersController';\n// import AuthController from '../controllers/AuthController';\n// import FilesController from '../controllers/FilesController';\n\nconst router = Router();\n\nrouter.get('/status', AppController.getStatus);\nrouter.get('/stats', AppController.getStats);\n\nrouter.post('/users', (req, res) => {\n  UsersController.postNew(req, res);\n});\nrouter.get('/users/me', (req, res) => {\n  UsersController.getMe(req, res);\n});\n\n// router.get('/connect', AuthController.getConnect);\n// router.get('/disconnect', AuthController.getDisconnect);\n// router.get('/users/me', UsersController.getMe);\n\n// router.post('/files', FilesController.postUpload);\n\n// router.get('/files/:id', FilesController.getShow);\n// router.get('/files', FilesController.getIndex);\n\n// router.put('/files/:id/publish', FilesController.putPublish);\n// router.put('/files/:id/unpublish', FilesController.putUnpublish);\n\n// router.get('/files/:id/data', FilesController.getFile);\n\nexport default router;\n"],"mappings":";;;;;;AAEA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAD,sBAAA,CAAAF,OAAA;AAA6D,SAAAE,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAJ7D;;AAKA;AACA;;AAEA,IAAME,MAAM,GAAG,IAAAC,eAAM,EAAC,CAAC;AAEvBD,MAAM,CAACE,GAAG,CAAC,SAAS,EAAEC,yBAAa,CAACC,SAAS,CAAC;AAC9CJ,MAAM,CAACE,GAAG,CAAC,QAAQ,EAAEC,yBAAa,CAACE,QAAQ,CAAC;AAE5CL,MAAM,CAACM,IAAI,CAAC,QAAQ,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;EAClCC,2BAAe,CAACC,OAAO,CAACH,GAAG,EAAEC,GAAG,CAAC;AACnC,CAAC,CAAC;AACFR,MAAM,CAACE,GAAG,CAAC,WAAW,EAAE,UAACK,GAAG,EAAEC,GAAG,EAAK;EACpCC,2BAAe,CAACE,KAAK,CAACJ,GAAG,EAAEC,GAAG,CAAC;AACjC,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAI,QAAA,GAAAC,OAAA,cAEeb,MAAM","ignoreList":[]}},"mtime":1710340627877},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/AppController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // eslint-disable-next-line no-unused-vars\n// controllers/AppController.js\nvar AppController = /*#__PURE__*/function () {\n  function AppController() {\n    _classCallCheck(this, AppController);\n  }\n  _createClass(AppController, null, [{\n    key: \"getStatus\",\n    value: function getStatus(req, res) {\n      var status = {\n        redis: _db[\"default\"].isAlive(),\n        db: _db[\"default\"].isAlive()\n      };\n      res.status(200).json(status);\n    }\n  }, {\n    key: \"getStats\",\n    value: function () {\n      var _getStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var numUsers, numFiles, stats;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _db[\"default\"].nbUsers();\n            case 3:\n              numUsers = _context.sent;\n              _context.next = 6;\n              return _db[\"default\"].nbFiles();\n            case 6:\n              numFiles = _context.sent;\n              stats = {\n                users: numUsers,\n                files: numFiles\n              };\n              res.status(200).json(stats);\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              res.status(500).send('Internal Server Error');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      function getStats(_x, _x2) {\n        return _getStats.apply(this, arguments);\n      }\n      return getStats;\n    }()\n  }]);\n  return AppController;\n}();\nvar _default = exports[\"default\"] = AppController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_db","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","AppController","getStatus","req","res","status","redis","dbClient","isAlive","db","json","_getStats","_callee","numUsers","numFiles","stats","_callee$","_context","nbUsers","nbFiles","users","files","t0","console","send","getStats","_x","_x2","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["AppController.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n// controllers/AppController.js\nimport dbClient from '../utils/db';\n\nclass AppController {\n  static getStatus(req, res) {\n    const status = {\n      redis: dbClient.isAlive(),\n      db: dbClient.isAlive(),\n    };\n\n    res.status(200).json(status);\n  }\n\n  static async getStats(req, res) {\n    try {\n      const numUsers = await dbClient.nbUsers();\n      const numFiles = await dbClient.nbFiles();\n\n      const stats = {\n        users: numUsers,\n        files: numFiles,\n      };\n\n      res.status(200).json(stats);\n    } catch (error) {\n      console.error(error);\n      res.status(500).send('Internal Server Error');\n    }\n  }\n}\n\nexport default AppController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710199108956},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/UsersController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _sha = _interopRequireDefault(require(\"sha1\"));\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // eslint-disable-next-line no-unused-vars\n// controllers/UsersController.js\nvar UsersController = /*#__PURE__*/function () {\n  function UsersController() {\n    _classCallCheck(this, UsersController);\n  }\n  _createClass(UsersController, null, [{\n    key: \"postNew\",\n    value: (\n    /**\n     *\n     * To create a user, you must specify an email and a password\n     * If the email is missing, return an error Missing email with a status code 400\n     * If the password is missing, return an error Missing password with a status code 400\n     * If the email already exists in DB, return an error Already exist with a status code 400\n     * The password must be stored after being hashed in SHA1\n     * The endpoint is returning the new user with only the email and the id\n     * (auto generated by MongoDB) with a status code 201\n     * The new user must be saved in the collection users:\n     * email: same as the value received\n     * password: SHA1 value of the value received\n     * */\n    function () {\n      var _postNew = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var _req$body, email, password, existingUser, hashedPassword, result, newUser;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _req$body = req.body, email = _req$body.email, password = _req$body.password;\n              if (email) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing email'\n              }));\n            case 3:\n              if (password) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing password'\n              }));\n            case 5:\n              _context.next = 7;\n              return _db[\"default\"].client.db().collection('users').findOne({\n                email: email\n              });\n            case 7:\n              existingUser = _context.sent;\n              if (!existingUser) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Already exist'\n              }));\n            case 10:\n              hashedPassword = (0, _sha[\"default\"])(password);\n              _context.next = 13;\n              return _db[\"default\"].client.db().collection('users').insertOne({\n                email: email,\n                password: hashedPassword\n              });\n            case 13:\n              result = _context.sent;\n              newUser = {\n                id: result.insertedId,\n                email: email\n              };\n              return _context.abrupt(\"return\", res.status(201).json(newUser));\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function postNew(_x, _x2) {\n        return _postNew.apply(this, arguments);\n      }\n      return postNew;\n    }())\n  }]);\n  return UsersController;\n}();\nvar _default = exports[\"default\"] = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_sha","_interopRequireDefault","require","_db","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","UsersController","_postNew","_callee","req","res","_req$body","email","password","existingUser","hashedPassword","result","newUser","_callee$","_context","body","status","json","dbClient","client","db","collection","findOne","sha1","insertOne","id","insertedId","postNew","_x","_x2","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["UsersController.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n// controllers/UsersController.js\n\nimport sha1 from 'sha1';\nimport dbClient from '../utils/db';\n\nclass UsersController {\n  /**\n   *\n   * To create a user, you must specify an email and a password\n   * If the email is missing, return an error Missing email with a status code 400\n   * If the password is missing, return an error Missing password with a status code 400\n   * If the email already exists in DB, return an error Already exist with a status code 400\n   * The password must be stored after being hashed in SHA1\n   * The endpoint is returning the new user with only the email and the id\n   * (auto generated by MongoDB) with a status code 201\n   * The new user must be saved in the collection users:\n   * email: same as the value received\n   * password: SHA1 value of the value received\n   * */\n  static async postNew(req, res) {\n    const { email, password } = req.body;\n\n    if (!email) {\n      return res.status(400).json({ error: 'Missing email' });\n    }\n\n    if (!password) {\n      return res.status(400).json({ error: 'Missing password' });\n    }\n\n    const existingUser = await dbClient.client.db().collection('users').findOne({ email });\n    if (existingUser) {\n      return res.status(400).json({ error: 'Already exist' });\n    }\n\n    const hashedPassword = sha1(password);\n\n    const result = await dbClient.client.db().collection('users').insertOne({ email, password: hashedPassword });\n\n    const newUser = {\n      id: result.insertedId,\n      email,\n    };\n\n    return res.status(201).json(newUser);\n  }\n}\n\nexport default UsersController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710340954587},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/AuthController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _uuid = require(\"uuid\");\nvar _crypto = require(\"crypto\");\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nvar _redis = _interopRequireDefault(require(\"../utils/redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // AuthController.js\nvar AuthController = /*#__PURE__*/function () {\n  function AuthController() {\n    _classCallCheck(this, AuthController);\n  }\n  _createClass(AuthController, null, [{\n    key: \"getConnect\",\n    value: function () {\n      var _getConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var authHeader, encodedCredentials, credentials, _credentials$split, _credentials$split2, email, password, user, token, key;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              authHeader = req.headers.authorization;\n              if (!(!authHeader || !authHeader.startsWith('Basic '))) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 3:\n              encodedCredentials = authHeader.slice('Basic '.length);\n              credentials = Buffer.from(encodedCredentials, 'base64').toString('utf-8');\n              _credentials$split = credentials.split(':'), _credentials$split2 = _slicedToArray(_credentials$split, 2), email = _credentials$split2[0], password = _credentials$split2[1];\n              _context.next = 8;\n              return _db[\"default\"].db.collection('users').findOne({\n                email: email,\n                password: sha1(password)\n              });\n            case 8:\n              user = _context.sent;\n              if (user) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 11:\n              token = (0, _uuid.v4)();\n              key = \"auth_\".concat(token);\n              _redis[\"default\"].set(key, user._id.toString(), 'EX', 86400);\n              return _context.abrupt(\"return\", res.status(200).json({\n                token: token\n              }));\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function getConnect(_x, _x2) {\n        return _getConnect.apply(this, arguments);\n      }\n      return getConnect;\n    }()\n  }, {\n    key: \"getDisconnect\",\n    value: function () {\n      var _getDisconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n        var token, key, userId;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = req.headers['x-token'];\n              if (token) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 3:\n              key = \"auth_\".concat(token);\n              _context2.next = 6;\n              return _redis[\"default\"].get(key);\n            case 6:\n              userId = _context2.sent;\n              if (userId) {\n                _context2.next = 9;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 9:\n              _redis[\"default\"].del(key);\n              return _context2.abrupt(\"return\", res.status(204).end());\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getDisconnect(_x3, _x4) {\n        return _getDisconnect.apply(this, arguments);\n      }\n      return getDisconnect;\n    }()\n  }]);\n  return AuthController;\n}();\nvar _default = exports[\"default\"] = AuthController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_uuid","require","_crypto","_db","_interopRequireDefault","_redis","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","AuthController","_getConnect","_callee","req","res","authHeader","encodedCredentials","credentials","_credentials$split","_credentials$split2","email","password","user","token","_callee$","_context","headers","authorization","startsWith","status","json","Buffer","split","dbClient","db","collection","findOne","sha1","uuidv4","concat","redisClient","set","_id","getConnect","_x","_x2","_getDisconnect","_callee2","userId","_callee2$","_context2","get","del","end","getDisconnect","_x3","_x4","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["AuthController.js"],"sourcesContent":["// AuthController.js\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { createHash } from 'crypto';\nimport dbClient from '../utils/db';\nimport redisClient from '../utils/redis';\n\nclass AuthController {\n  static async getConnect(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader || !authHeader.startsWith('Basic ')) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const encodedCredentials = authHeader.slice('Basic '.length);\n    const credentials = Buffer.from(encodedCredentials, 'base64').toString('utf-8');\n    const [email, password] = credentials.split(':');\n\n    const user = await dbClient.db.collection('users').findOne({ email, password: sha1(password) });\n    if (!user) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const token = uuidv4();\n    const key = `auth_${token}`;\n    redisClient.set(key, user._id.toString(), 'EX', 86400);\n\n    return res.status(200).json({ token });\n  }\n\n  static async getDisconnect(req, res) {\n    const token = req.headers['x-token'];\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    redisClient.del(key);\n\n    return res.status(204).end();\n  }\n}\n\nexport default AuthController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710341387017},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/FilesController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _uuid = require(\"uuid\");\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _base = _interopRequireDefault(require(\"base-64\"));\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nvar _redis = _interopRequireDefault(require(\"../utils/redis\"));\nvar _queues = _interopRequireDefault(require(\"../utils/queues\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // FilesController.js\nvar FilesController = /*#__PURE__*/function () {\n  function FilesController() {\n    _classCallCheck(this, FilesController);\n  }\n  _createClass(FilesController, null, [{\n    key: \"postUpload\",\n    value: function () {\n      var _postUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var token, _req$body, name, type, parentId, isPublic, data, key, userId, parentIdValue, parentFile, localPath, folderPath, fileContent, newFile, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = req.headers['x-token'];\n              _req$body = req.body, name = _req$body.name, type = _req$body.type, parentId = _req$body.parentId, isPublic = _req$body.isPublic, data = _req$body.data;\n              _context.next = 4;\n              return _queues[\"default\"].add({\n                userId: userId.toString(),\n                fileId: file._id.toString()\n              });\n            case 4:\n              if (token) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 6:\n              key = \"auth_\".concat(token);\n              _context.next = 9;\n              return _redis[\"default\"].get(key);\n            case 9:\n              userId = _context.sent;\n              if (userId) {\n                _context.next = 12;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 12:\n              if (name) {\n                _context.next = 14;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing name'\n              }));\n            case 14:\n              if (!(!type || !['folder', 'file', 'image'].includes(type))) {\n                _context.next = 16;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing type'\n              }));\n            case 16:\n              if (!(type !== 'folder' && !data)) {\n                _context.next = 18;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing data'\n              }));\n            case 18:\n              parentIdValue = 0;\n              if (!parentId) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 22;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').findOne({\n                _id: _db[\"default\"].ObjectId(parentId)\n              });\n            case 22:\n              parentFile = _context.sent;\n              if (parentFile) {\n                _context.next = 25;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Parent not found'\n              }));\n            case 25:\n              if (!(parentFile.type !== 'folder')) {\n                _context.next = 27;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Parent is not a folder'\n              }));\n            case 27:\n              parentIdValue = parentFile._id;\n            case 28:\n              if (type !== 'folder') {\n                folderPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n                localPath = _path[\"default\"].join(folderPath, \"\".concat((0, _uuid.v4)()));\n                fileContent = _base[\"default\"].decode(data);\n                _fs[\"default\"].writeFileSync(localPath, fileContent);\n              }\n              newFile = {\n                userId: _db[\"default\"].ObjectId(userId),\n                name: name,\n                type: type,\n                isPublic: isPublic || false,\n                parentId: parentIdValue,\n                localPath: type !== 'folder' ? localPath : undefined\n              };\n              _context.next = 32;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').insertOne(newFile);\n            case 32:\n              result = _context.sent;\n              return _context.abrupt(\"return\", res.status(201).json({\n                id: result.insertedId,\n                userId: userId,\n                name: name,\n                type: type,\n                isPublic: isPublic || false,\n                parentId: parentIdValue\n              }));\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function postUpload(_x, _x2) {\n        return _postUpload.apply(this, arguments);\n      }\n      return postUpload;\n    }()\n  }, {\n    key: \"getShow\",\n    value: function () {\n      var _getShow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n        var token, id, key, userId, file;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = req.headers['x-token'];\n              id = req.params.id;\n              if (token) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 4:\n              key = \"auth_\".concat(token);\n              _context2.next = 7;\n              return _redis[\"default\"].get(key);\n            case 7:\n              userId = _context2.sent;\n              if (userId) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 10:\n              _context2.next = 12;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').findOne({\n                _id: _db[\"default\"].ObjectId(id),\n                userId: _db[\"default\"].ObjectId(userId)\n              });\n            case 12:\n              file = _context2.sent;\n              if (file) {\n                _context2.next = 15;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 15:\n              return _context2.abrupt(\"return\", res.json(file));\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getShow(_x3, _x4) {\n        return _getShow.apply(this, arguments);\n      }\n      return getShow;\n    }()\n  }, {\n    key: \"getIndex\",\n    value: function () {\n      var _getIndex = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n        var token, _req$query, parentId, page, key, userId, pipeline, files;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = req.headers['x-token'];\n              _req$query = req.query, parentId = _req$query.parentId, page = _req$query.page;\n              if (token) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 4:\n              key = \"auth_\".concat(token);\n              _context3.next = 7;\n              return _redis[\"default\"].get(key);\n            case 7:\n              userId = _context3.sent;\n              if (userId) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 10:\n              pipeline = [{\n                $match: {\n                  userId: _db[\"default\"].ObjectId(userId),\n                  parentId: parentId ? _db[\"default\"].ObjectId(parentId) : 0\n                }\n              }, {\n                $skip: page ? page * 20 : 0\n              }, {\n                $limit: 20\n              }];\n              _context3.next = 13;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').aggregate(pipeline).toArray();\n            case 13:\n              files = _context3.sent;\n              return _context3.abrupt(\"return\", res.json(files));\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function getIndex(_x5, _x6) {\n        return _getIndex.apply(this, arguments);\n      }\n      return getIndex;\n    }()\n  }, {\n    key: \"putPublish\",\n    value: function () {\n      var _putPublish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n        var token, id, key, userId, file;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              token = req.headers['x-token'];\n              id = req.params.id;\n              if (token) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 4:\n              key = \"auth_\".concat(token);\n              _context4.next = 7;\n              return _redis[\"default\"].get(key);\n            case 7:\n              userId = _context4.sent;\n              if (userId) {\n                _context4.next = 10;\n                break;\n              }\n              return _context4.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 10:\n              _context4.next = 12;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').findOneAndUpdate({\n                _id: _db[\"default\"].ObjectId(id),\n                userId: _db[\"default\"].ObjectId(userId)\n              }, {\n                $set: {\n                  isPublic: true\n                }\n              }, {\n                returnDocument: 'after'\n              });\n            case 12:\n              file = _context4.sent;\n              if (file.value) {\n                _context4.next = 15;\n                break;\n              }\n              return _context4.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 15:\n              return _context4.abrupt(\"return\", res.json(file.value));\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function putPublish(_x7, _x8) {\n        return _putPublish.apply(this, arguments);\n      }\n      return putPublish;\n    }()\n  }, {\n    key: \"putUnpublish\",\n    value: function () {\n      var _putUnpublish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n        var token, id, key, userId, file;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              token = req.headers['x-token'];\n              id = req.params.id;\n              if (token) {\n                _context5.next = 4;\n                break;\n              }\n              return _context5.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 4:\n              key = \"auth_\".concat(token);\n              _context5.next = 7;\n              return _redis[\"default\"].get(key);\n            case 7:\n              userId = _context5.sent;\n              if (userId) {\n                _context5.next = 10;\n                break;\n              }\n              return _context5.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 10:\n              _context5.next = 12;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').findOneAndUpdate({\n                _id: _db[\"default\"].ObjectId(id),\n                userId: _db[\"default\"].ObjectId(userId)\n              }, {\n                $set: {\n                  isPublic: false\n                }\n              }, {\n                returnDocument: 'after'\n              });\n            case 12:\n              file = _context5.sent;\n              if (file.value) {\n                _context5.next = 15;\n                break;\n              }\n              return _context5.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 15:\n              return _context5.abrupt(\"return\", res.json(file.value));\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function putUnpublish(_x9, _x10) {\n        return _putUnpublish.apply(this, arguments);\n      }\n      return putUnpublish;\n    }()\n  }, {\n    key: \"getFile\",\n    value: function () {\n      var _getFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n        var token, id, key, userId, file, filePath, size, fileName, mimeType;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              token = req.headers['x-token'];\n              id = req.params.id;\n              if (token) {\n                _context6.next = 4;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 4:\n              key = \"auth_\".concat(token);\n              _context6.next = 7;\n              return _redis[\"default\"].get(key);\n            case 7:\n              userId = _context6.sent;\n              if (userId) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 10:\n              _context6.next = 12;\n              return _db[\"default\"].client.db(_db[\"default\"].database).collection('files').findOne({\n                _id: _db[\"default\"].ObjectId(id)\n              });\n            case 12:\n              file = _context6.sent;\n              if (file) {\n                _context6.next = 15;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 15:\n              if (!(!file.isPublic && (!userId || file.userId.toString() !== userId))) {\n                _context6.next = 17;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 17:\n              if (!(file.type === 'folder')) {\n                _context6.next = 19;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(400).json({\n                error: \"A folder doesn't have content\"\n              }));\n            case 19:\n              filePath = file.localPath;\n              if (_fs[\"default\"].existsSync(filePath)) {\n                _context6.next = 22;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 22:\n              size = req.query.size;\n              fileName = size ? \"\".concat(file.localPath, \"_\").concat(size) : file.localPath;\n              if (_fs[\"default\"].existsSync(fileName)) {\n                _context6.next = 26;\n                break;\n              }\n              return _context6.abrupt(\"return\", res.status(404).json({\n                error: 'Not found'\n              }));\n            case 26:\n              mimeType = mime.lookup(fileName);\n              res.setHeader('Content-Type', mimeType);\n              _fs[\"default\"].createReadStream(fileName).pipe(res);\n            case 29:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function getFile(_x11, _x12) {\n        return _getFile.apply(this, arguments);\n      }\n      return getFile;\n    }()\n  }]);\n  return FilesController;\n}();\nvar _default = exports[\"default\"] = FilesController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_uuid","require","_fs","_interopRequireDefault","_path","_base","_db","_redis","_queues","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","FilesController","_postUpload","_callee","req","res","token","_req$body","parentId","isPublic","data","userId","parentIdValue","parentFile","localPath","folderPath","fileContent","newFile","result","_callee$","_context","headers","body","fileQueue","add","toString","fileId","file","_id","status","json","concat","redisClient","get","includes","dbClient","client","db","database","collection","findOne","ObjectId","process","env","FOLDER_PATH","path","join","uuidv4","base64","decode","fs","writeFileSync","insertOne","id","insertedId","postUpload","_x","_x2","_getShow","_callee2","_callee2$","_context2","params","getShow","_x3","_x4","_getIndex","_callee3","_req$query","page","pipeline","files","_callee3$","_context3","query","$match","$skip","$limit","aggregate","toArray","getIndex","_x5","_x6","_putPublish","_callee4","_callee4$","_context4","findOneAndUpdate","$set","returnDocument","putPublish","_x7","_x8","_putUnpublish","_callee5","_callee5$","_context5","putUnpublish","_x9","_x10","_getFile","_callee6","filePath","size","fileName","mimeType","_callee6$","_context6","existsSync","mime","lookup","setHeader","createReadStream","pipe","getFile","_x11","_x12","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["FilesController.js"],"sourcesContent":["// FilesController.js\n\nimport { v4 as uuidv4 } from 'uuid';\nimport fs from 'fs';\nimport path from 'path';\nimport base64 from 'base-64';\nimport dbClient from '../utils/db';\nimport redisClient from '../utils/redis';\nimport fileQueue from '../utils/queues';\n\nclass FilesController {\n  static async postUpload(req, res) {\n    const { 'x-token': token } = req.headers;\n    const {\n      name, type, parentId, isPublic, data,\n    } = req.body;\n\n    await fileQueue.add({\n      userId: userId.toString(),\n      fileId: file._id.toString(),\n    });\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    if (!name) {\n      return res.status(400).json({ error: 'Missing name' });\n    }\n\n    if (!type || !['folder', 'file', 'image'].includes(type)) {\n      return res.status(400).json({ error: 'Missing type' });\n    }\n\n    if (type !== 'folder' && !data) {\n      return res.status(400).json({ error: 'Missing data' });\n    }\n\n    let parentIdValue = 0;\n\n    if (parentId) {\n      const parentFile = await dbClient.client.db(dbClient.database).collection('files').findOne({ _id: dbClient.ObjectId(parentId) });\n\n      if (!parentFile) {\n        return res.status(400).json({ error: 'Parent not found' });\n      }\n\n      if (parentFile.type !== 'folder') {\n        return res.status(400).json({ error: 'Parent is not a folder' });\n      }\n\n      parentIdValue = parentFile._id;\n    }\n\n    let localPath;\n    if (type !== 'folder') {\n      const folderPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n      localPath = path.join(folderPath, `${uuidv4()}`);\n      const fileContent = base64.decode(data);\n      fs.writeFileSync(localPath, fileContent);\n    }\n\n    const newFile = {\n      userId: dbClient.ObjectId(userId),\n      name,\n      type,\n      isPublic: isPublic || false,\n      parentId: parentIdValue,\n      localPath: type !== 'folder' ? localPath : undefined,\n    };\n\n    const result = await dbClient.client.db(dbClient.database).collection('files').insertOne(newFile);\n\n    return res.status(201).json({\n      id: result.insertedId,\n      userId,\n      name,\n      type,\n      isPublic: isPublic || false,\n      parentId: parentIdValue,\n    });\n  }\n\n  static async getShow(req, res) {\n    const { 'x-token': token } = req.headers;\n    const { id } = req.params;\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const file = await dbClient.client.db(dbClient.database).collection('files').findOne({ _id: dbClient.ObjectId(id), userId: dbClient.ObjectId(userId) });\n\n    if (!file) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    return res.json(file);\n  }\n\n  static async getIndex(req, res) {\n    const { 'x-token': token } = req.headers;\n    const { parentId, page } = req.query;\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const pipeline = [\n      {\n        $match: {\n          userId: dbClient.ObjectId(userId),\n          parentId: parentId ? dbClient.ObjectId(parentId) : 0,\n        },\n      },\n      {\n        $skip: page ? page * 20 : 0,\n      },\n      {\n        $limit: 20,\n      },\n    ];\n\n    const files = await dbClient.client.db(dbClient.database).collection('files').aggregate(pipeline).toArray();\n\n    return res.json(files);\n  }\n\n  static async putPublish(req, res) {\n    const { 'x-token': token } = req.headers;\n    const { id } = req.params;\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const file = await dbClient.client.db(dbClient.database).collection('files').findOneAndUpdate(\n      { _id: dbClient.ObjectId(id), userId: dbClient.ObjectId(userId) },\n      { $set: { isPublic: true } },\n      { returnDocument: 'after' },\n    );\n\n    if (!file.value) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    return res.json(file.value);\n  }\n\n  static async putUnpublish(req, res) {\n    const { 'x-token': token } = req.headers;\n    const { id } = req.params;\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const file = await dbClient.client.db(dbClient.database).collection('files').findOneAndUpdate(\n      { _id: dbClient.ObjectId(id), userId: dbClient.ObjectId(userId) },\n      { $set: { isPublic: false } },\n      { returnDocument: 'after' },\n    );\n\n    if (!file.value) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    return res.json(file.value);\n  }\n\n  static async getFile(req, res) {\n    const { 'x-token': token } = req.headers;\n    const { id } = req.params;\n\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const file = await dbClient.client.db(dbClient.database).collection('files').findOne(\n      { _id: dbClient.ObjectId(id) },\n    );\n\n    if (!file) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    if (!file.isPublic && (!userId || file.userId.toString() !== userId)) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    if (file.type === 'folder') {\n      return res.status(400).json({ error: \"A folder doesn't have content\" });\n    }\n\n    const filePath = file.localPath;\n    if (!fs.existsSync(filePath)) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n    const { size } = req.query;\n    const fileName = size ? `${file.localPath}_${size}` : file.localPath;\n\n    if (!fs.existsSync(fileName)) {\n      return res.status(404).json({ error: 'Not found' });\n    }\n\n    const mimeType = mime.lookup(fileName);\n    res.setHeader('Content-Type', mimeType);\n    fs.createReadStream(fileName).pipe(res);\n  }\n}\n\nexport default FilesController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710152680574},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/routes/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = require(\"express\");\nvar _AppController = _interopRequireDefault(require(\"../controllers/AppController\"));\nvar _UsersController = _interopRequireDefault(require(\"../controllers/UsersController\"));\nvar _AuthController = _interopRequireDefault(require(\"../controllers/AuthController\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// eslint-disable-next-line no-unused-vars\n\n// import FilesController from '../controllers/FilesController';\n\nvar router = (0, _express.Router)();\nrouter.get('/status', _AppController[\"default\"].getStatus);\nrouter.get('/stats', _AppController[\"default\"].getStats);\nrouter.post('/users', function (req, res) {\n  _UsersController[\"default\"].postNew(req, res);\n});\nrouter.get('/users/me', function (req, res) {\n  _UsersController[\"default\"].getMe(req, res);\n});\nrouter.get('/connect', _AuthController[\"default\"].getConnect);\nrouter.get('/disconnect', _AuthController[\"default\"].getDisconnect);\nrouter.get('/users/me', _UsersController[\"default\"].getMe);\n\n// router.post('/files', FilesController.postUpload);\n\n// router.get('/files/:id', FilesController.getShow);\n// router.get('/files', FilesController.getIndex);\n\n// router.put('/files/:id/publish', FilesController.putPublish);\n// router.put('/files/:id/unpublish', FilesController.putUnpublish);\n\n// router.get('/files/:id/data', FilesController.getFile);\nvar _default = exports[\"default\"] = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfQXBwQ29udHJvbGxlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfVXNlcnNDb250cm9sbGVyIiwiX0F1dGhDb250cm9sbGVyIiwib2JqIiwiX19lc01vZHVsZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsIkFwcENvbnRyb2xsZXIiLCJnZXRTdGF0dXMiLCJnZXRTdGF0cyIsInBvc3QiLCJyZXEiLCJyZXMiLCJVc2Vyc0NvbnRyb2xsZXIiLCJwb3N0TmV3IiwiZ2V0TWUiLCJBdXRoQ29udHJvbGxlciIsImdldENvbm5lY3QiLCJnZXREaXNjb25uZWN0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9hbGkvYWxpL2FseC1maWxlc19tYW5hZ2VyL3JvdXRlcy8iLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCBBcHBDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL0FwcENvbnRyb2xsZXInO1xuaW1wb3J0IFVzZXJzQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9Vc2Vyc0NvbnRyb2xsZXInO1xuaW1wb3J0IEF1dGhDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL0F1dGhDb250cm9sbGVyJztcbi8vIGltcG9ydCBGaWxlc0NvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvRmlsZXNDb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy9zdGF0dXMnLCBBcHBDb250cm9sbGVyLmdldFN0YXR1cyk7XG5yb3V0ZXIuZ2V0KCcvc3RhdHMnLCBBcHBDb250cm9sbGVyLmdldFN0YXRzKTtcblxucm91dGVyLnBvc3QoJy91c2VycycsIChyZXEsIHJlcykgPT4ge1xuICBVc2Vyc0NvbnRyb2xsZXIucG9zdE5ldyhyZXEsIHJlcyk7XG59KTtcbnJvdXRlci5nZXQoJy91c2Vycy9tZScsIChyZXEsIHJlcykgPT4ge1xuICBVc2Vyc0NvbnRyb2xsZXIuZ2V0TWUocmVxLCByZXMpO1xufSk7XG5cbnJvdXRlci5nZXQoJy9jb25uZWN0JywgQXV0aENvbnRyb2xsZXIuZ2V0Q29ubmVjdCk7XG5yb3V0ZXIuZ2V0KCcvZGlzY29ubmVjdCcsIEF1dGhDb250cm9sbGVyLmdldERpc2Nvbm5lY3QpO1xucm91dGVyLmdldCgnL3VzZXJzL21lJywgVXNlcnNDb250cm9sbGVyLmdldE1lKTtcblxuLy8gcm91dGVyLnBvc3QoJy9maWxlcycsIEZpbGVzQ29udHJvbGxlci5wb3N0VXBsb2FkKTtcblxuLy8gcm91dGVyLmdldCgnL2ZpbGVzLzppZCcsIEZpbGVzQ29udHJvbGxlci5nZXRTaG93KTtcbi8vIHJvdXRlci5nZXQoJy9maWxlcycsIEZpbGVzQ29udHJvbGxlci5nZXRJbmRleCk7XG5cbi8vIHJvdXRlci5wdXQoJy9maWxlcy86aWQvcHVibGlzaCcsIEZpbGVzQ29udHJvbGxlci5wdXRQdWJsaXNoKTtcbi8vIHJvdXRlci5wdXQoJy9maWxlcy86aWQvdW5wdWJsaXNoJywgRmlsZXNDb250cm9sbGVyLnB1dFVucHVibGlzaCk7XG5cbi8vIHJvdXRlci5nZXQoJy9maWxlcy86aWQvZGF0YScsIEZpbGVzQ29udHJvbGxlci5nZXRGaWxlKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxjQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxnQkFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksZUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQTJELFNBQUFFLHVCQUFBRyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFMM0Q7O0FBTUE7O0FBRUEsSUFBTUUsTUFBTSxHQUFHLElBQUFDLGVBQU0sRUFBQyxDQUFDO0FBRXZCRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxTQUFTLEVBQUVDLHlCQUFhLENBQUNDLFNBQVMsQ0FBQztBQUM5Q0osTUFBTSxDQUFDRSxHQUFHLENBQUMsUUFBUSxFQUFFQyx5QkFBYSxDQUFDRSxRQUFRLENBQUM7QUFFNUNMLE1BQU0sQ0FBQ00sSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBSztFQUNsQ0MsMkJBQWUsQ0FBQ0MsT0FBTyxDQUFDSCxHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUNuQyxDQUFDLENBQUM7QUFDRlIsTUFBTSxDQUFDRSxHQUFHLENBQUMsV0FBVyxFQUFFLFVBQUNLLEdBQUcsRUFBRUMsR0FBRyxFQUFLO0VBQ3BDQywyQkFBZSxDQUFDRSxLQUFLLENBQUNKLEdBQUcsRUFBRUMsR0FBRyxDQUFDO0FBQ2pDLENBQUMsQ0FBQztBQUVGUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxVQUFVLEVBQUVVLDBCQUFjLENBQUNDLFVBQVUsQ0FBQztBQUNqRGIsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFVSwwQkFBYyxDQUFDRSxhQUFhLENBQUM7QUFDdkRkLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFdBQVcsRUFBRU8sMkJBQWUsQ0FBQ0UsS0FBSyxDQUFDOztBQUU5Qzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFBQSxJQUFBSSxRQUFBLEdBQUFDLE9BQUEsY0FFZWhCLE1BQU0iLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_express","require","_AppController","_interopRequireDefault","_UsersController","_AuthController","obj","__esModule","router","Router","get","AppController","getStatus","getStats","post","req","res","UsersController","postNew","getMe","AuthController","getConnect","getDisconnect","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/routes/","sources":["index.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n\nimport { Router } from 'express';\nimport AppController from '../controllers/AppController';\nimport UsersController from '../controllers/UsersController';\nimport AuthController from '../controllers/AuthController';\n// import FilesController from '../controllers/FilesController';\n\nconst router = Router();\n\nrouter.get('/status', AppController.getStatus);\nrouter.get('/stats', AppController.getStats);\n\nrouter.post('/users', (req, res) => {\n  UsersController.postNew(req, res);\n});\nrouter.get('/users/me', (req, res) => {\n  UsersController.getMe(req, res);\n});\n\nrouter.get('/connect', AuthController.getConnect);\nrouter.get('/disconnect', AuthController.getDisconnect);\nrouter.get('/users/me', UsersController.getMe);\n\n// router.post('/files', FilesController.postUpload);\n\n// router.get('/files/:id', FilesController.getShow);\n// router.get('/files', FilesController.getIndex);\n\n// router.put('/files/:id/publish', FilesController.putPublish);\n// router.put('/files/:id/unpublish', FilesController.putUnpublish);\n\n// router.get('/files/:id/data', FilesController.getFile);\n\nexport default router;\n"],"mappings":";;;;;;AAEA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,eAAA,GAAAF,sBAAA,CAAAF,OAAA;AAA2D,SAAAE,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAL3D;;AAMA;;AAEA,IAAME,MAAM,GAAG,IAAAC,eAAM,EAAC,CAAC;AAEvBD,MAAM,CAACE,GAAG,CAAC,SAAS,EAAEC,yBAAa,CAACC,SAAS,CAAC;AAC9CJ,MAAM,CAACE,GAAG,CAAC,QAAQ,EAAEC,yBAAa,CAACE,QAAQ,CAAC;AAE5CL,MAAM,CAACM,IAAI,CAAC,QAAQ,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;EAClCC,2BAAe,CAACC,OAAO,CAACH,GAAG,EAAEC,GAAG,CAAC;AACnC,CAAC,CAAC;AACFR,MAAM,CAACE,GAAG,CAAC,WAAW,EAAE,UAACK,GAAG,EAAEC,GAAG,EAAK;EACpCC,2BAAe,CAACE,KAAK,CAACJ,GAAG,EAAEC,GAAG,CAAC;AACjC,CAAC,CAAC;AAEFR,MAAM,CAACE,GAAG,CAAC,UAAU,EAAEU,0BAAc,CAACC,UAAU,CAAC;AACjDb,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEU,0BAAc,CAACE,aAAa,CAAC;AACvDd,MAAM,CAACE,GAAG,CAAC,WAAW,EAAEO,2BAAe,CAACE,KAAK,CAAC;;AAE9C;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAI,QAAA,GAAAC,OAAA,cAEehB,MAAM","ignoreList":[]}},"mtime":1710341189197},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/utils/queues.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _bull = require(\"bull\");\n// queues.js\n\nvar fileQueue = new _bull.Queue('fileQueue');\nvar _default = exports[\"default\"] = fileQueue;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYnVsbCIsInJlcXVpcmUiLCJmaWxlUXVldWUiLCJRdWV1ZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL2hvbWUvYWxpL2FsaS9hbHgtZmlsZXNfbWFuYWdlci91dGlscy8iLCJzb3VyY2VzIjpbInF1ZXVlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBxdWV1ZXMuanNcblxuaW1wb3J0IHsgUXVldWUgfSBmcm9tICdidWxsJztcblxuY29uc3QgZmlsZVF1ZXVlID0gbmV3IFF1ZXVlKCdmaWxlUXVldWUnKTtcblxuZXhwb3J0IGRlZmF1bHQgZmlsZVF1ZXVlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFGQTs7QUFJQSxJQUFNQyxTQUFTLEdBQUcsSUFBSUMsV0FBSyxDQUFDLFdBQVcsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxjQUUxQkgsU0FBUyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_bull","require","fileQueue","Queue","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/utils/","sources":["queues.js"],"sourcesContent":["// queues.js\n\nimport { Queue } from 'bull';\n\nconst fileQueue = new Queue('fileQueue');\n\nexport default fileQueue;\n"],"mappings":";;;;;;AAEA,IAAAA,KAAA,GAAAC,OAAA;AAFA;;AAIA,IAAMC,SAAS,GAAG,IAAIC,WAAK,CAAC,WAAW,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,cAE1BH,SAAS","ignoreList":[]}},"mtime":1710152348214},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/AppController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // eslint-disable-next-line no-unused-vars\n// controllers/AppController.js\nvar AppController = /*#__PURE__*/function () {\n  function AppController() {\n    _classCallCheck(this, AppController);\n  }\n  _createClass(AppController, null, [{\n    key: \"getStatus\",\n    value: function getStatus(req, res) {\n      var status = {\n        redis: _db[\"default\"].isAlive(),\n        db: _db[\"default\"].isAlive()\n      };\n      res.status(200).json(status);\n    }\n  }, {\n    key: \"getStats\",\n    value: function () {\n      var _getStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var numUsers, numFiles, stats;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _db[\"default\"].nbUsers();\n            case 3:\n              numUsers = _context.sent;\n              _context.next = 6;\n              return _db[\"default\"].nbFiles();\n            case 6:\n              numFiles = _context.sent;\n              stats = {\n                users: numUsers,\n                files: numFiles\n              };\n              res.status(200).json(stats);\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              res.status(500).send('Internal Server Error');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      function getStats(_x, _x2) {\n        return _getStats.apply(this, arguments);\n      }\n      return getStats;\n    }()\n  }]);\n  return AppController;\n}();\nvar _default = exports[\"default\"] = AppController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_db","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","AppController","getStatus","req","res","status","redis","dbClient","isAlive","db","json","_getStats","_callee","numUsers","numFiles","stats","_callee$","_context","nbUsers","nbFiles","users","files","t0","console","send","getStats","_x","_x2","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["AppController.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n// controllers/AppController.js\nimport dbClient from '../utils/db';\n\nclass AppController {\n  static getStatus(req, res) {\n    const status = {\n      redis: dbClient.isAlive(),\n      db: dbClient.isAlive(),\n    };\n\n    res.status(200).json(status);\n  }\n\n  static async getStats(req, res) {\n    try {\n      const numUsers = await dbClient.nbUsers();\n      const numFiles = await dbClient.nbFiles();\n\n      const stats = {\n        users: numUsers,\n        files: numFiles,\n      };\n\n      res.status(200).json(stats);\n    } catch (error) {\n      console.error(error);\n      res.status(500).send('Internal Server Error');\n    }\n  }\n}\n\nexport default AppController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710199108956},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/utils/db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _mongodb = require(\"mongodb\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // utils/db.js\nvar DBClient = /*#__PURE__*/function () {\n  function DBClient() {\n    var _this = this;\n    _classCallCheck(this, DBClient);\n    this.host = process.env.DB_HOST || 'localhost';\n    this.port = process.env.DB_PORT || 27017;\n    this.database = process.env.DB_DATABASE || 'files_manager';\n    this.client = new _mongodb.MongoClient(\"mongodb://\".concat(this.host, \":\").concat(this.port), {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n    this.connectPromise = new Promise(function (resolve, reject) {\n      _this.client.connect(function (err) {\n        if (err) {\n          console.error(\"DB Connection Error: \".concat(err));\n          reject(err);\n        } else {\n          console.log('DB Connected');\n          resolve();\n        }\n      });\n    });\n  }\n  _createClass(DBClient, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.connectPromise;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"isAlive\",\n    value: function isAlive() {\n      return !!this.client && this.client.isConnected();\n    }\n  }, {\n    key: \"nbUsers\",\n    value: function () {\n      var _nbUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var usersCollection, userCount;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.connect();\n            case 2:\n              usersCollection = this.client.db(this.database).collection('users');\n              _context2.next = 5;\n              return usersCollection.countDocuments();\n            case 5:\n              userCount = _context2.sent;\n              return _context2.abrupt(\"return\", userCount);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function nbUsers() {\n        return _nbUsers.apply(this, arguments);\n      }\n      return nbUsers;\n    }()\n  }, {\n    key: \"nbFiles\",\n    value: function () {\n      var _nbFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var filesCollection, filesCount;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.connect();\n            case 2:\n              filesCollection = this.client.db(this.database).collection('files');\n              _context3.next = 5;\n              return filesCollection.countDocuments();\n            case 5:\n              filesCount = _context3.sent;\n              return _context3.abrupt(\"return\", filesCount);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function nbFiles() {\n        return _nbFiles.apply(this, arguments);\n      }\n      return nbFiles;\n    }()\n  }]);\n  return DBClient;\n}();\nvar dbClient = new DBClient();\nvar _default = exports[\"default\"] = dbClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_mongodb","require","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","DBClient","_this","host","process","env","DB_HOST","port","DB_PORT","database","DB_DATABASE","client","MongoClient","concat","useNewUrlParser","useUnifiedTopology","connectPromise","connect","console","log","_connect","_callee","_callee$","_context","isAlive","isConnected","_nbUsers","_callee2","usersCollection","userCount","_callee2$","_context2","db","collection","countDocuments","nbUsers","_nbFiles","_callee3","filesCollection","filesCount","_callee3$","_context3","nbFiles","dbClient","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/utils/","sources":["db.js"],"sourcesContent":["// utils/db.js\n\nimport { MongoClient } from 'mongodb';\n\nclass DBClient {\n  constructor() {\n    this.host = process.env.DB_HOST || 'localhost';\n    this.port = process.env.DB_PORT || 27017;\n    this.database = process.env.DB_DATABASE || 'files_manager';\n    this.client = new MongoClient(`mongodb://${this.host}:${this.port}`, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n\n    this.connectPromise = new Promise((resolve, reject) => {\n      this.client.connect((err) => {\n        if (err) {\n          console.error(`DB Connection Error: ${err}`);\n          reject(err);\n        } else {\n          console.log('DB Connected');\n          resolve();\n        }\n      });\n    });\n  }\n\n  async connect() {\n    await this.connectPromise;\n  }\n\n  isAlive() {\n    return !!this.client && this.client.isConnected();\n  }\n\n  async nbUsers() {\n    await this.connect();\n    const usersCollection = this.client.db(this.database).collection('users');\n    const userCount = await usersCollection.countDocuments();\n    return userCount;\n  }\n\n  async nbFiles() {\n    await this.connect();\n    const filesCollection = this.client.db(this.database).collection('files');\n    const filesCount = await filesCollection.countDocuments();\n    return filesCount;\n  }\n}\n\nconst dbClient = new DBClient();\nexport default dbClient;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710340963707},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/UsersController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _sha = _interopRequireDefault(require(\"sha1\"));\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nvar _redis = _interopRequireDefault(require(\"../utils/redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // eslint-disable-next-line no-unused-vars\n// controllers/UsersController.js\nvar UsersController = /*#__PURE__*/function () {\n  function UsersController() {\n    _classCallCheck(this, UsersController);\n  }\n  _createClass(UsersController, null, [{\n    key: \"postNew\",\n    value: (\n    /**\n     *\n     * To create a user, you must specify an email and a password\n     * If the email is missing, return an error Missing email with a status code 400\n     * If the password is missing, return an error Missing password with a status code 400\n     * If the email already exists in DB, return an error Already exist with a status code 400\n     * The password must be stored after being hashed in SHA1\n     * The endpoint is returning the new user with only the email and the id\n     * (auto generated by MongoDB) with a status code 201\n     * The new user must be saved in the collection users:\n     * email: same as the value received\n     * password: SHA1 value of the value received\n     * */\n    function () {\n      var _postNew = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var _req$body, email, password, existingUser, hashedPassword, result, newUser;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _req$body = req.body, email = _req$body.email, password = _req$body.password;\n              if (email) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing email'\n              }));\n            case 3:\n              if (password) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Missing password'\n              }));\n            case 5:\n              _context.next = 7;\n              return _db[\"default\"].client.db().collection('users').findOne({\n                email: email\n              });\n            case 7:\n              existingUser = _context.sent;\n              if (!existingUser) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(400).json({\n                error: 'Already exist'\n              }));\n            case 10:\n              hashedPassword = (0, _sha[\"default\"])(password);\n              _context.next = 13;\n              return _db[\"default\"].client.db().collection('users').insertOne({\n                email: email,\n                password: hashedPassword\n              });\n            case 13:\n              result = _context.sent;\n              newUser = {\n                id: result.insertedId,\n                email: email\n              };\n              return _context.abrupt(\"return\", res.status(201).json(newUser));\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function postNew(_x, _x2) {\n        return _postNew.apply(this, arguments);\n      }\n      return postNew;\n    }())\n  }, {\n    key: \"getMe\",\n    value: function () {\n      var _getMe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n        var token, userId, user;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = req.headers['x-token'];\n              if (token) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 3:\n              _context2.next = 5;\n              return _redis[\"default\"].get(\"auth_\".concat(token));\n            case 5:\n              userId = _context2.sent;\n              if (userId) {\n                _context2.next = 8;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 8:\n              _context2.next = 10;\n              return _db[\"default\"].db.collection('users').findOne({\n                _id: userId\n              });\n            case 10:\n              user = _context2.sent;\n              if (user) {\n                _context2.next = 13;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 13:\n              return _context2.abrupt(\"return\", res.json({\n                id: user._id,\n                email: user.email\n              }));\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getMe(_x3, _x4) {\n        return _getMe.apply(this, arguments);\n      }\n      return getMe;\n    }()\n  }]);\n  return UsersController;\n}();\nvar _default = exports[\"default\"] = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_sha","_interopRequireDefault","require","_db","_redis","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","UsersController","_postNew","_callee","req","res","_req$body","email","password","existingUser","hashedPassword","result","newUser","_callee$","_context","body","status","json","dbClient","client","db","collection","findOne","sha1","insertOne","id","insertedId","postNew","_x","_x2","_getMe","_callee2","token","userId","user","_callee2$","_context2","headers","redisClient","get","concat","_id","getMe","_x3","_x4","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["UsersController.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\n// controllers/UsersController.js\n\nimport sha1 from 'sha1';\nimport dbClient from '../utils/db';\nimport redisClient from '../utils/redis';\n\nclass UsersController {\n  /**\n   *\n   * To create a user, you must specify an email and a password\n   * If the email is missing, return an error Missing email with a status code 400\n   * If the password is missing, return an error Missing password with a status code 400\n   * If the email already exists in DB, return an error Already exist with a status code 400\n   * The password must be stored after being hashed in SHA1\n   * The endpoint is returning the new user with only the email and the id\n   * (auto generated by MongoDB) with a status code 201\n   * The new user must be saved in the collection users:\n   * email: same as the value received\n   * password: SHA1 value of the value received\n   * */\n  static async postNew(req, res) {\n    const { email, password } = req.body;\n\n    if (!email) {\n      return res.status(400).json({ error: 'Missing email' });\n    }\n\n    if (!password) {\n      return res.status(400).json({ error: 'Missing password' });\n    }\n\n    const existingUser = await dbClient.client.db().collection('users').findOne({ email });\n    if (existingUser) {\n      return res.status(400).json({ error: 'Already exist' });\n    }\n\n    const hashedPassword = sha1(password);\n\n    const result = await dbClient.client.db().collection('users').insertOne({ email, password: hashedPassword });\n\n    const newUser = {\n      id: result.insertedId,\n      email,\n    };\n\n    return res.status(201).json(newUser);\n  }\n\n  static async getMe(req, res) {\n    const token = req.headers['x-token'];\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = await redisClient.get(`auth_${token}`);\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const user = await dbClient.db.collection('users').findOne({ _id: userId });\n    if (!user) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    return res.json({ id: user._id, email: user.email });\n  }\n}\n\nexport default UsersController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710341383217},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\nvar _uuid = require(\"uuid\");\nvar _mongodb = require(\"mongodb\");\nvar _util = require(\"util\");\nvar _redis = _interopRequireDefault(require(\"redis\"));\nvar _sha = _interopRequireDefault(require(\"sha1\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n_chai.default.use(_chaiHttp.default);\n\n//----------------- task0\n\n//----------------- task1\n\n//----------------- task2\n\ndescribe('------------------\\nTASK 2\\nGET /status', () => {\n  it('GET /status exists', done => {\n    _chai.default.request('http://localhost:5000').get('/status').end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /status', () => {\n  it('GET /status exists', done => {\n    _chai.default.request('http://localhost:5000').get('/status').end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const bodyJson = res.body;\n      _chai.default.expect(bodyJson.redis).to.be.true;\n      _chai.default.expect(bodyJson.db).to.be.true;\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /stats', () => {\n  it('GET /stats exists', done => {\n    _chai.default.request('http://localhost:5000').get('/stats').end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /stats', () => {\n  let testClientDb = null;\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /stats exists', done => {\n    _chai.default.request('http://localhost:5000').get('/stats').end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const bodyJson = res.body;\n      _chai.default.expect(bodyJson.users).to.equal(0);\n      _chai.default.expect(bodyJson.files).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /stats', () => {\n  let testClientDb = null;\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // add 2 users\n        await testClientDb.collection('users').insertOne({\n          email: \"me@me.com\"\n        });\n        await testClientDb.collection('users').insertOne({\n          email: \"me2@me.com\"\n        });\n\n        // add 3 files\n        await testClientDb.collection('files').insertOne({\n          name: \"file 1\"\n        });\n        await testClientDb.collection('files').insertOne({\n          name: \"file 2\"\n        });\n        await testClientDb.collection('files').insertOne({\n          name: \"file 3\"\n        });\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /stats exists', done => {\n    _chai.default.request('http://localhost:5000').get('/stats').end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const bodyJson = res.body;\n      _chai.default.expect(bodyJson.users).to.equal(2);\n      _chai.default.expect(bodyJson.files).to.equal(3);\n      done();\n    });\n  }).timeout(30000);\n});\n//----------------- task3\n\ndescribe('------------------\\nTASK 3\\nGET /users', () => {\n  let testClientDb = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /users creates a new user in DB (when pass correct parameters)', done => {\n    const userParam = {\n      email: `${fctRandomString()}@me.com`,\n      password: `${fctRandomString()}`\n    };\n    _chai.default.request('http://localhost:5000').post('/users').send(userParam).end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resUserId = res.body.id;\n      const resUserEmail = res.body.email;\n      _chai.default.expect(resUserEmail).to.equal(userParam.email);\n      testClientDb.collection('users').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        _chai.default.expect(docs[0]._id.toString()).to.equal(resUserId);\n        _chai.default.expect(docs[0].email).to.equal(resUserEmail);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users', () => {\n  let testClientDb = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /users with missing email', done => {\n    const userParam = {\n      password: `${fctRandomString()}`\n    };\n    _chai.default.request('http://localhost:5000').post('/users').send(userParam).end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Missing email\");\n      testClientDb.collection('users').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users', () => {\n  let testClientDb = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /users with missing password', done => {\n    const userParam = {\n      email: `${fctRandomString()}@me.com`\n    };\n    _chai.default.request('http://localhost:5000').post('/users').send(userParam).end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Missing password\");\n      testClientDb.collection('users').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users', () => {\n  let testClientDb = null;\n  let initialUser = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        await testClientDb.collection('users').insertOne(initialUser);\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /users with email that already exists', done => {\n    const userParam = {\n      email: initialUser.email,\n      password: `${fctRandomString()}`\n    };\n    _chai.default.request('http://localhost:5000').post('/users').send(userParam).end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Already exist\");\n      testClientDb.collection('users').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        const docUser = docs[0];\n        _chai.default.expect(docUser.email).to.equal(initialUser.email);\n        _chai.default.expect(docUser.password.toUpperCase()).to.equal(initialUser.password.toUpperCase());\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users', () => {\n  let testClientDb = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {});\n  it('GET /users stores the password as SHA1', done => {\n    const userParam = {\n      email: `${fctRandomString()}@me.com`,\n      password: `${fctRandomString()}`\n    };\n    _chai.default.request('http://localhost:5000').post('/users').send(userParam).end((err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resUserId = res.body.id;\n      const resUserEmail = res.body.email;\n      _chai.default.expect(resUserEmail).to.equal(userParam.email);\n      testClientDb.collection('users').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        const docUser = docs[0];\n        _chai.default.expect(docUser._id.toString()).to.equal(resUserId);\n        _chai.default.expect(docUser.email).to.equal(userParam.email);\n        _chai.default.expect(docUser.password.toUpperCase()).to.equal((0, _sha.default)(userParam.password).toUpperCase());\n        done();\n      });\n    });\n  }).timeout(30000);\n});\n\n//----------------- task4\n\ndescribe('------------------\\nTASK 4\\nGET /connect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserPwd = null;\n  let initialUserId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUserPwd = fctRandomString();\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(initialUserPwd)\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /connect with invalid Base64 content', done => {\n    const basicAuth = `Basic ${Buffer.from(`hello`, 'binary').toString('base64')}`;\n    _chai.default.request('http://localhost:5000').get('/connect').set('Authorization', basicAuth).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      const authKeys = await redisKeysAsync('auth_*');\n      _chai.default.expect(authKeys.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /connect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserPwd = null;\n  let initialUserId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUserPwd = fctRandomString();\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(initialUserPwd)\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /connect with unknown user email', done => {\n    const basicAuth = `Basic ${Buffer.from(`fake_${initialUser.email}:${initialUserPwd}`, 'binary').toString('base64')}`;\n    _chai.default.request('http://localhost:5000').get('/connect').set('Authorization', basicAuth).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      const authKeys = await redisKeysAsync('auth_*');\n      _chai.default.expect(authKeys.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /connect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserPwd = null;\n  let initialUserId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUserPwd = fctRandomString();\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(initialUserPwd)\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /connect  with wrong user password', done => {\n    const basicAuth = `Basic ${Buffer.from(`${initialUser.email}:${initialUserPwd}_wrong`, 'binary').toString('base64')}`;\n    _chai.default.request('http://localhost:5000').get('/connect').set('Authorization', basicAuth).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      const authKeys = await redisKeysAsync('auth_*');\n      _chai.default.expect(authKeys.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /connect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserPwd = null;\n  let initialUserId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUserPwd = fctRandomString();\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(initialUserPwd)\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /connect with correct user email and password', done => {\n    const basicAuth = `Basic ${Buffer.from(`${initialUser.email}:${initialUserPwd}`, 'binary').toString('base64')}`;\n    _chai.default.request('http://localhost:5000').get('/connect').set('Authorization', basicAuth).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resUserToken = res.body.token;\n      _chai.default.expect(resUserToken).to.not.be.null;\n      const redisToken = await redisGetAsync(`auth_${resUserToken}`);\n      _chai.default.expect(redisToken).to.not.be.null;\n      _chai.default.expect(initialUserId).to.equal(redisToken);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /disconnect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /disconnect with an incorrect token', done => {\n    redisKeysAsync('auth_*').then(keys => {\n      _chai.default.expect(keys.length).to.equal(1);\n      _chai.default.request('http://localhost:5000').get('/disconnect').set('X-Token', \"nope\").end(async (err, res) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(res).to.have.status(401);\n        const resError = res.body.error;\n        _chai.default.expect(resError).to.equal(\"Unauthorized\");\n        const authKeys = await redisKeysAsync('auth_*');\n        _chai.default.expect(authKeys.length).to.equal(1);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /disconnect', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /disconnect with an correct token', done => {\n    redisKeysAsync('auth_*').then(keys => {\n      _chai.default.expect(keys.length).to.equal(1);\n      _chai.default.request('http://localhost:5000').get('/disconnect').set('X-Token', initialUserToken).end(async (err, res) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(res).to.have.status(204);\n        const authKeys = await redisKeysAsync('auth_*');\n        _chai.default.expect(authKeys.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users/me', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /users/me with no token', done => {\n    _chai.default.request('http://localhost:5000').get('/users/me').end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users/me', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /users/me with incorrect token', done => {\n    _chai.default.request('http://localhost:5000').get('/users/me').set('X-Token', \"nope\").end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /users/me', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /users/me with an correct token', done => {\n    _chai.default.request('http://localhost:5000').get('/users/me').set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resUser = res.body;\n      _chai.default.expect(resUser.email).to.equal(initialUser.email);\n      _chai.default.expect(resUser.id).to.equal(initialUserId);\n      done();\n    });\n  }).timeout(30000);\n});\n\n//----------------- task5\n\ndescribe('------------------\\nTASK 5\\nPOST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files invalid token user', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'folder'\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', `${initialUserToken}_121`).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files with missing name', done => {\n    const fileData = {\n      type: 'folder'\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Missing name\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files with missing type', done => {\n    const fileData = {\n      name: fctRandomString()\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Missing type\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files with missing data if type != folder', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'file'\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Missing data\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files with invalid parentId', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'folder',\n      parentId: initialUserId\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Parent not found\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(0);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFakeFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: \"newFolder\",\n          type: \"file\",\n          data: Buffer.from(\"hello\", 'binary').toString('base64'),\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFakeFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files with a parentId not a folder', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'folder',\n      parentId: initialFolderId\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Parent is not a folder\");\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files creates a folder at the root', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'folder'\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(fileData.name);\n      _chai.default.expect(resFile.userId).to.equal(initialUserId);\n      _chai.default.expect(resFile.type).to.equal(fileData.type);\n      _chai.default.expect(resFile.parentId).to.equal(0);\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        const docFile = docs[0];\n        _chai.default.expect(docFile.name).to.equal(fileData.name);\n        _chai.default.expect(docFile._id.toString()).to.equal(resFile.id);\n        _chai.default.expect(docFile.userId.toString()).to.equal(initialUserId);\n        _chai.default.expect(docFile.type).to.equal(fileData.type);\n        _chai.default.expect(docFile.parentId.toString()).to.equal('0');\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: \"newFolder\",\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('POST /files creates a folder inside a folder', done => {\n    const fileData = {\n      name: fctRandomString(),\n      type: 'folder',\n      parentId: initialFolderId\n    };\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(fileData.name);\n      _chai.default.expect(resFile.userId).to.equal(initialUserId);\n      _chai.default.expect(resFile.type).to.equal(fileData.type);\n      _chai.default.expect(resFile.parentId).to.equal(initialFolderId);\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(2);\n        const docFile = docs.filter(i => i._id.toString() == resFile.id.toString())[0];\n        _chai.default.expect(docFile.name).to.equal(fileData.name);\n        _chai.default.expect(docFile._id.toString()).to.equal(resFile.id);\n        _chai.default.expect(docFile.userId.toString()).to.equal(initialUserId);\n        _chai.default.expect(docFile.type).to.equal(fileData.type);\n        _chai.default.expect(docFile.parentId.toString()).to.equal(initialFolderId);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('POST /files creates a file at the root', done => {\n    const fileClearContent = fctRandomString();\n    const fileData = {\n      name: fctRandomString(),\n      type: 'file',\n      data: Buffer.from(fileClearContent, 'binary').toString('base64')\n    };\n    let filesInTmpFilesManager = [];\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      filesInTmpFilesManager = _fs.default.readdirSync(folderTmpFilesManagerPath);\n    }\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(fileData.name);\n      _chai.default.expect(resFile.userId).to.equal(initialUserId);\n      _chai.default.expect(resFile.type).to.equal(fileData.type);\n      _chai.default.expect(resFile.parentId).to.equal(0);\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(1);\n        const docFile = docs[0];\n        _chai.default.expect(docFile.name).to.equal(fileData.name);\n        _chai.default.expect(docFile._id.toString()).to.equal(resFile.id);\n        _chai.default.expect(docFile.userId.toString()).to.equal(initialUserId);\n        _chai.default.expect(docFile.type).to.equal(fileData.type);\n        _chai.default.expect(docFile.parentId.toString()).to.equal('0');\n        let newFilesInTmpFilesManager = [];\n        if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n          newFilesInTmpFilesManager = _fs.default.readdirSync(folderTmpFilesManagerPath);\n        }\n        _chai.default.expect(newFilesInTmpFilesManager.length).to.equal(filesInTmpFilesManager.length + 1);\n        const newFileInDiskPath = newFilesInTmpFilesManager.filter(x => !filesInTmpFilesManager.includes(x));\n        const newFileInDiskContent = _fs.default.readFileSync(`${folderTmpFilesManagerPath}/${newFileInDiskPath[0]}`).toString();\n        _chai.default.expect(newFileInDiskContent).to.equal(fileClearContent);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\ndescribe('POST /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: \"newFolder\",\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('POST /files creates a file inside a folder', done => {\n    const fileClearContent = fctRandomString();\n    const fileData = {\n      name: fctRandomString(),\n      type: 'file',\n      data: Buffer.from(fileClearContent, 'binary').toString('base64'),\n      parentId: initialFolderId\n    };\n    let filesInTmpFilesManager = [];\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      filesInTmpFilesManager = _fs.default.readdirSync(folderTmpFilesManagerPath);\n    }\n    _chai.default.request('http://localhost:5000').post('/files').set('X-Token', initialUserToken).send(fileData).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(201);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(fileData.name);\n      _chai.default.expect(resFile.userId).to.equal(initialUserId);\n      _chai.default.expect(resFile.type).to.equal(fileData.type);\n      _chai.default.expect(resFile.parentId).to.equal(initialFolderId);\n      testClientDb.collection('files').find({}).toArray((err, docs) => {\n        _chai.default.expect(err).to.be.null;\n        _chai.default.expect(docs.length).to.equal(2);\n        const docFile = docs.filter(i => i._id.toString() == resFile.id.toString())[0];\n        _chai.default.expect(docFile.name).to.equal(fileData.name);\n        _chai.default.expect(docFile._id.toString()).to.equal(resFile.id);\n        _chai.default.expect(docFile.userId.toString()).to.equal(initialUserId);\n        _chai.default.expect(docFile.type).to.equal(fileData.type);\n        _chai.default.expect(docFile.parentId.toString()).to.equal(initialFolderId);\n        let newFilesInTmpFilesManager = [];\n        if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n          newFilesInTmpFilesManager = _fs.default.readdirSync(folderTmpFilesManagerPath);\n        }\n        _chai.default.expect(newFilesInTmpFilesManager.length).to.equal(filesInTmpFilesManager.length + 1);\n        const newFileInDiskPath = newFilesInTmpFilesManager.filter(x => !filesInTmpFilesManager.includes(x));\n        const newFileInDiskContent = _fs.default.readFileSync(`${folderTmpFilesManagerPath}/${newFileInDiskPath[0]}`).toString();\n        _chai.default.expect(newFileInDiskContent).to.equal(fileClearContent);\n        done();\n      });\n    });\n  }).timeout(30000);\n});\n\n//----------------- task6\n\ndescribe('------------------\\nTASK 6\\nGET /files/:id', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files/:id invalid token user', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFolderId}`).set('X-Token', `${initialUserToken}_121`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files/:id with no file linked to :id', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${new _mongodb.ObjectID()}`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: new _mongodb.ObjectID(),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files/:id with no file linked to :id for this user', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFolderId}`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolder = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files/:id with correct :id of the owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFolderId}`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(initialFolder.name);\n      _chai.default.expect(resFile.type).to.equal(initialFolder.type);\n      _chai.default.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\n      _chai.default.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files invalid token user', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).set('X-Token', `${initialUserToken}_121`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFiles = [];\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add folders\n        for (let i = 0; i < 25; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: '0'\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFiles.push(item);\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files with no parentId and no page', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resList = res.body;\n      _chai.default.expect(resList.length).to.equal(20);\n      resList.forEach(item => {\n        const itemIdx = initialFiles.findIndex(i => i.id == item.id);\n        _chai.default.assert.isAtLeast(itemIdx, 0);\n        const itemInit = initialFiles.splice(itemIdx, 1)[0];\n        _chai.default.expect(itemInit).to.not.be.null;\n        _chai.default.expect(itemInit.id).to.equal(item.id);\n        _chai.default.expect(itemInit.name).to.equal(item.name);\n        _chai.default.expect(itemInit.type).to.equal(item.type);\n        _chai.default.expect(itemInit.parentId).to.equal(item.parentId);\n      });\n      _chai.default.expect(initialFiles.length).to.equal(5);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFiles = [];\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add folders\n        for (let i = 0; i < 25; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: '0'\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFiles.push(item);\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files with a wrong parentId and no page', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).set('X-Token', initialUserToken).query({\n      parentId: new _mongodb.ObjectID().toString()\n    }).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resList = res.body;\n      _chai.default.expect(resList.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFiles = [];\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add folders\n        const initialFolders = [];\n        for (let i = 0; i < 25; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: '0'\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFolders.push(item);\n        }\n\n        // Add 2 folders inside a folder\n        for (let i = 0; i < 2; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: (0, _mongodb.ObjectID)(initialFolders[0].id)\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFiles.push(item);\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files with a valid parentId and no page', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).query({\n      parentId: initialFiles[0].parentId.toString()\n    }).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resList = res.body;\n      _chai.default.expect(resList.length).to.equal(2);\n      resList.forEach(item => {\n        const itemIdx = initialFiles.findIndex(i => i.id == item.id);\n        _chai.default.assert.isAtLeast(itemIdx, 0);\n        const itemInit = initialFiles.splice(itemIdx, 1)[0];\n        _chai.default.expect(itemInit).to.not.be.null;\n        _chai.default.expect(itemInit.id).to.equal(item.id);\n        _chai.default.expect(itemInit.name).to.equal(item.name);\n        _chai.default.expect(itemInit.type).to.equal(item.type);\n        _chai.default.expect(itemInit.parentId.toString()).to.equal(item.parentId.toString());\n      });\n      _chai.default.expect(initialFiles.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFiles = [];\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add folders\n        for (let i = 0; i < 25; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: '0'\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFiles.push(item);\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files with no parentId and second page', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).query({\n      page: 1\n    }).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resList = res.body;\n      _chai.default.expect(resList.length).to.equal(5);\n      resList.forEach(item => {\n        const itemIdx = initialFiles.findIndex(i => i.id == item.id);\n        _chai.default.assert.isAtLeast(itemIdx, 0);\n        const itemInit = initialFiles.splice(itemIdx, 1)[0];\n        _chai.default.expect(itemInit).to.not.be.null;\n        _chai.default.expect(itemInit.id).to.equal(item.id);\n        _chai.default.expect(itemInit.name).to.equal(item.name);\n        _chai.default.expect(itemInit.type).to.equal(item.type);\n        _chai.default.expect(itemInit.parentId).to.equal(item.parentId);\n      });\n      _chai.default.expect(initialFiles.length).to.equal(20);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFiles = [];\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add folders\n        for (let i = 0; i < 25; i += 1) {\n          const item = {\n            userId: (0, _mongodb.ObjectID)(initialUserId),\n            name: fctRandomString(),\n            type: \"folder\",\n            parentId: '0'\n          };\n          const createdFileDocs = await testClientDb.collection('files').insertOne(item);\n          if (createdFileDocs && createdFileDocs.ops.length > 0) {\n            item.id = createdFileDocs.ops[0]._id.toString();\n          }\n          initialFiles.push(item);\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('GET /files with no parentId and a page too far', done => {\n    _chai.default.request('http://localhost:5000').get(`/files`).query({\n      page: 10\n    }).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resList = res.body;\n      _chai.default.expect(resList.length).to.equal(0);\n      done();\n    });\n  }).timeout(30000);\n});\n//----------------- task7\n\ndescribe('------------------\\nTASK 7\\nPUT /files/:id/publish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/publish invalid token user', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/publish`).set('X-Token', `${initialUserToken}_121`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/publish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/publish with no file linked to :id', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${new _mongodb.ObjectID()}/publish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/publish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: new _mongodb.ObjectID(),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/publish with no file linked to :id for this user', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/publish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/publish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolder = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: false\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/publish with correct :id of the owner - file not published yet', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/publish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(initialFolder.name);\n      _chai.default.expect(resFile.type).to.equal(initialFolder.type);\n      _chai.default.expect(resFile.isPublic).to.true;\n      _chai.default.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\n      _chai.default.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/publish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolder = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: true\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/publish with correct :id of the owner - file already published yet', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/publish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(initialFolder.name);\n      _chai.default.expect(resFile.type).to.equal(initialFolder.type);\n      _chai.default.expect(resFile.isPublic).to.true;\n      _chai.default.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\n      _chai.default.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/unpublish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/unpublish invalid token user', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/unpublish`).set('X-Token', `${initialUserToken}_121`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(401);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Unauthorized\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/unpublish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/unpublish with no file linked to :id', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${new _mongodb.ObjectID()}/unpublish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/unpublish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        const initialFolder = {\n          userId: new _mongodb.ObjectID(),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0'\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/unpublish with no file linked to :id for this user', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/unpublish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/unpublish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolder = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: false\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/unpublish with correct :id of the owner - file not published yet', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/unpublish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(initialFolder.name);\n      _chai.default.expect(resFile.type).to.equal(initialFolder.type);\n      _chai.default.expect(resFile.isPublic).to.false;\n      _chai.default.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\n      _chai.default.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('PUT /files/:id/unpublish', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFolder = null;\n  let initialFolderId = null;\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder\n        initialFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: true\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFolderId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n  });\n  it('PUT /files/:id/unpublish with correct :id of the owner - file already published yet', done => {\n    _chai.default.request('http://localhost:5000').put(`/files/${initialFolderId}/unpublish`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      const resFile = res.body;\n      _chai.default.expect(resFile.name).to.equal(initialFolder.name);\n      _chai.default.expect(resFile.type).to.equal(initialFolder.type);\n      _chai.default.expect(resFile.isPublic).to.false;\n      _chai.default.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\n      _chai.default.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\n      done();\n    });\n  }).timeout(30000);\n});\n\n//----------------- task8\n\ndescribe('------------------\\nTASK 8\\nGET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, `Hello-${(0, _uuid.v4)()}`);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with no file linked to :id', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${new _mongodb.ObjectID()}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let fileUser = null;\n  let fileUserId = null;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 user owner of file\n        fileUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\n        if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\n          fileUserId = createdUserFileDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, `Hello-${(0, _uuid.v4)()}`);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file linked to :id but user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let fileUser = null;\n  let fileUserId = null;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 user owner of file\n        fileUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\n        if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\n          fileUserId = createdUserFileDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, `Hello-${(0, _uuid.v4)()}`);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file linked to :id but user authenticated and not owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFileId = null;\n  let initialFileContent = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        initialFileContent = `Hello-${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, initialFileContent);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).set('X-Token', initialUserToken).buffer().parse((res, cb) => {\n      res.setEncoding(\"binary\");\n      res.data = \"\";\n      res.on(\"data\", chunk => {\n        res.data += chunk;\n      });\n      res.on(\"end\", () => {\n        cb(null, new Buffer(res.data, \"binary\"));\n      });\n    }).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      _chai.default.expect(res.body.toString()).to.equal(initialFileContent);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialFileId = null;\n  let initialFileContent = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        initialFileContent = `Hello-${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, initialFileContent);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with a published file linked to :id and user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).buffer().parse((res, cb) => {\n      res.setEncoding(\"binary\");\n      res.data = \"\";\n      res.on(\"data\", chunk => {\n        res.data += chunk;\n      });\n      res.on(\"end\", () => {\n        cb(null, new Buffer(res.data, \"binary\"));\n      });\n    }).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      _chai.default.expect(res.body.toString()).to.equal(initialFileContent);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let fileUser = null;\n  let fileUserId = null;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFileId = null;\n  let initialFileContent = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 user owner of file\n        fileUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\n        if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\n          fileUserId = createdUserFileDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        initialFileContent = `Hello-${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, initialFileContent);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with a published file linked to :id and user authenticated but not owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).set('X-Token', initialUserToken).buffer().parse((res, cb) => {\n      res.setEncoding(\"binary\");\n      res.data = \"\";\n      res.on(\"data\", chunk => {\n        res.data += chunk;\n      });\n      res.on(\"end\", () => {\n        cb(null, new Buffer(res.data, \"binary\"));\n      });\n    }).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      _chai.default.expect(res.body.toString()).to.equal(initialFileContent);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialFileId = null;\n  let initialFileContent = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file\n        fctCreateTmp();\n        const fileLocalPath = `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`;\n        initialFileContent = `Hello-${(0, _uuid.v4)()}`;\n        _fs.default.writeFileSync(fileLocalPath, initialFileContent);\n        const initialFile = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: fileLocalPath\n        };\n        const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\n        if (createdFileDocs && createdFileDocs.ops.length > 0) {\n          initialFileId = createdFileDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with a published file linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialFileId}/data`).set('X-Token', initialUserToken).buffer().parse((res, cb) => {\n      res.setEncoding(\"binary\");\n      res.data = \"\";\n      res.on(\"data\", chunk => {\n        res.data += chunk;\n      });\n      res.on(\"end\", () => {\n        cb(null, new Buffer(res.data, \"binary\"));\n      });\n    }).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(200);\n      _chai.default.expect(res.body.toString()).to.equal(initialFileContent);\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUnpublishedFolderId = null;\n  let initialPublishedFolderId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder unpublished\n        const initialUnpublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: false\n        };\n        const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\n        if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\n          initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder published\n        const initialPublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: true\n        };\n        const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\n        if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\n          initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\n        }\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished folder linked to :id but user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFolderId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with a published folder linked to :id but user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFolderId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"A folder doesn't have content\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let fileUser = null;\n  let fileUserId = null;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialUnpublishedFolderId = null;\n  let initialPublishedFolderId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 user owner of file\n        fileUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\n        if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\n          fileUserId = createdUserFileDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder unpublished\n        const initialUnpublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: false\n        };\n        const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\n        if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\n          initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder published\n        const initialPublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: true\n        };\n        const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\n        if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\n          initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished folder linked to :id but user authenticated and not owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFolderId}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with a published folder linked to :id but user authenticated and not owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFolderId}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"A folder doesn't have content\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialUnpublishedFolderId = null;\n  let initialPublishedFolderId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder unpublished\n        const initialUnpublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: false\n        };\n        const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\n        if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\n          initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 folder published\n        const initialPublishedFolder = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"folder\",\n          parentId: '0',\n          isPublic: true\n        };\n        const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\n        if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\n          initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveAllRedisKeys();\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished folder linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFolderId}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"A folder doesn't have content\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with a published folder linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFolderId}/data`).set('X-Token', initialUserToken).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(400);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"A folder doesn't have content\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUnpublishedFileId = null;\n  let initialPublishedFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file publish\n        fctCreateTmp();\n        const initialFileP = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\n        if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\n          initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file unpublish\n        const initialFileUP = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\n        if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\n          initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\n        }\n        resolve();\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file not present locally linked to :id and user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with a published file not present locally linked to :id and user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let fileUser = null;\n  let fileUserId = null;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialUnpublishedFileId = null;\n  let initialPublishedFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 user owner of file\n        fileUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\n        if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\n          fileUserId = createdUserFileDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file publish\n        fctCreateTmp();\n        const initialFileP = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\n        if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\n          initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file unpublish\n        const initialFileUP = {\n          userId: (0, _mongodb.ObjectID)(fileUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\n        if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\n          initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file not present locally linked to :id and user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with a published file not present locally linked to :id and user unauthenticated', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\ndescribe('GET /files/:id/data', () => {\n  let testClientDb;\n  let testRedisClient;\n  let redisDelAsync;\n  let redisGetAsync;\n  let redisSetAsync;\n  let redisKeysAsync;\n  let initialUser = null;\n  let initialUserId = null;\n  let initialUserToken = null;\n  let initialUnpublishedFileId = null;\n  let initialPublishedFileId = null;\n  const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\n  const fctRandomString = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n  const fctRemoveAllRedisKeys = async () => {\n    const keys = await redisKeysAsync('auth_*');\n    keys.forEach(async key => {\n      await redisDelAsync(key);\n    });\n  };\n  const fctCreateTmp = () => {\n    if (!_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.mkdirSync(folderTmpFilesManagerPath);\n    }\n  };\n  const fctRemoveTmp = () => {\n    if (_fs.default.existsSync(folderTmpFilesManagerPath)) {\n      _fs.default.readdirSync(`${folderTmpFilesManagerPath}/`).forEach(i => {\n        _fs.default.unlinkSync(`${folderTmpFilesManagerPath}/${i}`);\n      });\n    }\n  };\n  beforeEach(() => {\n    const dbInfo = {\n      host: process.env.DB_HOST || 'localhost',\n      port: process.env.DB_PORT || '27017',\n      database: process.env.DB_DATABASE || 'files_manager'\n    };\n    return new Promise(resolve => {\n      fctRemoveTmp();\n      _mongodb.MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\n        testClientDb = client.db(dbInfo.database);\n        await testClientDb.collection('users').deleteMany({});\n        await testClientDb.collection('files').deleteMany({});\n\n        // Add 1 user\n        initialUser = {\n          email: `${fctRandomString()}@me.com`,\n          password: (0, _sha.default)(fctRandomString())\n        };\n        const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\n        if (createdDocs && createdDocs.ops.length > 0) {\n          initialUserId = createdDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file publish\n        fctCreateTmp();\n        const initialFileP = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: true,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\n        if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\n          initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\n        }\n\n        // Add 1 file unpublish\n        const initialFileUP = {\n          userId: (0, _mongodb.ObjectID)(initialUserId),\n          name: fctRandomString(),\n          type: \"file\",\n          parentId: '0',\n          isPublic: false,\n          localPath: `${folderTmpFilesManagerPath}/${(0, _uuid.v4)()}`\n        };\n        const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\n        if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\n          initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\n        }\n        testRedisClient = _redis.default.createClient();\n        redisDelAsync = (0, _util.promisify)(testRedisClient.del).bind(testRedisClient);\n        redisGetAsync = (0, _util.promisify)(testRedisClient.get).bind(testRedisClient);\n        redisSetAsync = (0, _util.promisify)(testRedisClient.set).bind(testRedisClient);\n        redisKeysAsync = (0, _util.promisify)(testRedisClient.keys).bind(testRedisClient);\n        testRedisClient.on('connect', async () => {\n          fctRemoveAllRedisKeys();\n\n          // Set token for this user\n          initialUserToken = (0, _uuid.v4)();\n          await redisSetAsync(`auth_${initialUserToken}`, initialUserId);\n          resolve();\n        });\n      });\n    });\n  });\n  afterEach(() => {\n    fctRemoveTmp();\n  });\n  it('GET /files/:id/data with an unpublished file not present locally linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialUnpublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n  it('GET /files/:id/data with an published file not present locally linked to :id and user authenticated and owner', done => {\n    _chai.default.request('http://localhost:5000').get(`/files/${initialPublishedFileId}/data`).end(async (err, res) => {\n      _chai.default.expect(err).to.be.null;\n      _chai.default.expect(res).to.have.status(404);\n      const resError = res.body.error;\n      _chai.default.expect(resError).to.equal(\"Not found\");\n      done();\n    });\n  }).timeout(30000);\n});\nconsole.log(\"----\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_chai","_interopRequireDefault","require","_chaiHttp","_uuid","_mongodb","_util","_redis","_sha","_fs","obj","__esModule","default","chai","use","chaiHttp","describe","it","done","request","get","end","err","res","expect","to","be","null","have","status","timeout","bodyJson","body","redis","true","db","testClientDb","beforeEach","dbInfo","host","process","env","DB_HOST","port","DB_PORT","database","DB_DATABASE","Promise","resolve","MongoClient","connect","client","collection","deleteMany","afterEach","users","equal","files","insertOne","email","name","fctRandomString","Math","random","toString","substring","userParam","password","post","send","resUserId","id","resUserEmail","find","toArray","docs","length","_id","resError","error","initialUser","sha1","docUser","toUpperCase","testRedisClient","redisDelAsync","redisGetAsync","redisSetAsync","redisKeysAsync","initialUserPwd","initialUserId","fctRemoveAllRedisKeys","keys","forEach","key","createdDocs","ops","createClient","promisify","del","bind","set","on","basicAuth","Buffer","from","authKeys","resUserToken","token","not","redisToken","initialUserToken","uuidv4","then","resUser","fileData","type","parentId","initialFolderId","initialFakeFolder","userId","ObjectID","data","createdFileDocs","resFile","docFile","initialFolder","filter","i","folderTmpFilesManagerPath","FOLDER_PATH","fctRemoveTmp","fs","existsSync","readdirSync","unlinkSync","fileClearContent","filesInTmpFilesManager","newFilesInTmpFilesManager","newFileInDiskPath","x","includes","newFileInDiskContent","readFileSync","initialFiles","item","push","resList","itemIdx","findIndex","assert","isAtLeast","itemInit","splice","query","initialFolders","page","put","isPublic","false","initialFileId","fctCreateTmp","mkdirSync","fileLocalPath","writeFileSync","initialFile","localPath","fileUser","fileUserId","createdUserFileDocs","initialFileContent","buffer","parse","cb","setEncoding","chunk","initialUnpublishedFolderId","initialPublishedFolderId","initialUnpublishedFolder","createdUFolderDocs","initialPublishedFolder","createdPFolderDocs","initialUnpublishedFileId","initialPublishedFileId","initialFileP","createdFilePDocs","initialFileUP","createdFileUPDocs","console","log"],"sourceRoot":"/home/ali/ali/alx-files_manager/","sources":["test.js"],"sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { MongoClient, ObjectID } from 'mongodb';\r\nimport { promisify } from 'util';\r\nimport redis from 'redis';\r\nimport sha1 from 'sha1';\r\nimport fs from 'fs';\r\n\r\nchai.use(chaiHttp);\r\n\r\n//----------------- task0\r\n\r\n//----------------- task1\r\n\r\n//----------------- task2\r\n\r\ndescribe('------------------\\nTASK 2\\nGET /status', () => {\r\n    it('GET /status exists', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/status')\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /status', () => {\r\n    it('GET /status exists', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/status')\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                const bodyJson = res.body;\r\n                chai.expect(bodyJson.redis).to.be.true;\r\n                chai.expect(bodyJson.db).to.be.true;\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /stats', () => {\r\n    it('GET /stats exists', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/stats')\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /stats', () => {\r\n    let testClientDb = null;\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /stats exists', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/stats')\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                const bodyJson = res.body;\r\n                chai.expect(bodyJson.users).to.equal(0);\r\n                chai.expect(bodyJson.files).to.equal(0);\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /stats', () => {\r\n    let testClientDb = null;\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // add 2 users\r\n                await testClientDb.collection('users').insertOne({ email: \"me@me.com\" })\r\n                await testClientDb.collection('users').insertOne({ email: \"me2@me.com\" })\r\n\r\n                // add 3 files\r\n                await testClientDb.collection('files').insertOne({ name: \"file 1\" })\r\n                await testClientDb.collection('files').insertOne({ name: \"file 2\" })\r\n                await testClientDb.collection('files').insertOne({ name: \"file 3\" })\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /stats exists', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/stats')\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                const bodyJson = res.body;\r\n                chai.expect(bodyJson.users).to.equal(2);\r\n                chai.expect(bodyJson.files).to.equal(3);\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n//----------------- task3\r\n\r\ndescribe('------------------\\nTASK 3\\nGET /users', () => {\r\n    let testClientDb = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /users creates a new user in DB (when pass correct parameters)', (done) => {\r\n        const userParam = {\r\n            email: `${fctRandomString()}@me.com`,\r\n            password: `${fctRandomString()}`\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/users')\r\n            .send(userParam)\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n                const resUserId = res.body.id\r\n                const resUserEmail = res.body.email\r\n                chai.expect(resUserEmail).to.equal(userParam.email);\r\n\r\n                testClientDb.collection('users')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n                        chai.expect(docs[0]._id.toString()).to.equal(resUserId);\r\n                        chai.expect(docs[0].email).to.equal(resUserEmail);\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users', () => {\r\n    let testClientDb = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /users with missing email', (done) => {\r\n        const userParam = {\r\n            password: `${fctRandomString()}`\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/users')\r\n            .send(userParam)\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Missing email\");\r\n\r\n                testClientDb.collection('users')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users', () => {\r\n    let testClientDb = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /users with missing password', (done) => {\r\n        const userParam = {\r\n            email: `${fctRandomString()}@me.com`\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/users')\r\n            .send(userParam)\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Missing password\");\r\n\r\n                testClientDb.collection('users')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users', () => {\r\n    let testClientDb = null;\r\n    let initialUser = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                await testClientDb.collection('users').insertOne(initialUser);\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /users with email that already exists', (done) => {\r\n        const userParam = {\r\n            email: initialUser.email,\r\n            password: `${fctRandomString()}`\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/users')\r\n            .send(userParam)\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Already exist\");\r\n\r\n                testClientDb.collection('users')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n                        const docUser = docs[0];\r\n                        chai.expect(docUser.email).to.equal(initialUser.email);\r\n                        chai.expect(docUser.password.toUpperCase()).to.equal(initialUser.password.toUpperCase());\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users', () => {\r\n    let testClientDb = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n    });\r\n\r\n    it('GET /users stores the password as SHA1', (done) => {\r\n        const userParam = {\r\n            email: `${fctRandomString()}@me.com` ,\r\n            password: `${fctRandomString()}`\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/users')\r\n            .send(userParam)\r\n            .end((err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n                const resUserId = res.body.id\r\n                const resUserEmail = res.body.email\r\n                chai.expect(resUserEmail).to.equal(userParam.email);\r\n\r\n                testClientDb.collection('users')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n                        const docUser = docs[0];\r\n                        chai.expect(docUser._id.toString()).to.equal(resUserId);\r\n                        chai.expect(docUser.email).to.equal(userParam.email);\r\n                        chai.expect(docUser.password.toUpperCase()).to.equal(sha1(userParam.password).toUpperCase());\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n//----------------- task4\r\n\r\ndescribe('------------------\\nTASK 4\\nGET /connect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserPwd = null;\r\n    let initialUserId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUserPwd = fctRandomString();\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(initialUserPwd)\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /connect with invalid Base64 content', (done) => {\r\n        const basicAuth = `Basic ${Buffer.from(`hello`, 'binary').toString('base64')}`;\r\n        chai.request('http://localhost:5000')\r\n            .get('/connect')\r\n            .set('Authorization', basicAuth)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                const authKeys = await redisKeysAsync('auth_*');\r\n                chai.expect(authKeys.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /connect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserPwd = null;\r\n    let initialUserId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUserPwd = fctRandomString();\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(initialUserPwd)\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /connect with unknown user email', (done) => {\r\n        const basicAuth = `Basic ${Buffer.from(`fake_${initialUser.email}:${initialUserPwd}`, 'binary').toString('base64')}`;\r\n        chai.request('http://localhost:5000')\r\n            .get('/connect')\r\n            .set('Authorization', basicAuth)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                const authKeys = await redisKeysAsync('auth_*');\r\n                chai.expect(authKeys.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /connect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserPwd = null;\r\n    let initialUserId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUserPwd = fctRandomString();\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(initialUserPwd)\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /connect  with wrong user password', (done) => {\r\n        const basicAuth = `Basic ${Buffer.from(`${initialUser.email}:${initialUserPwd}_wrong`, 'binary').toString('base64')}`;\r\n        chai.request('http://localhost:5000')\r\n            .get('/connect')\r\n            .set('Authorization', basicAuth)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                const authKeys = await redisKeysAsync('auth_*');\r\n                chai.expect(authKeys.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /connect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserPwd = null;\r\n    let initialUserId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUserPwd = fctRandomString();\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(initialUserPwd)\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /connect with correct user email and password', (done) => {\r\n        const basicAuth = `Basic ${Buffer.from(`${initialUser.email}:${initialUserPwd}`, 'binary').toString('base64')}`;\r\n        chai.request('http://localhost:5000')\r\n            .get('/connect')\r\n            .set('Authorization', basicAuth)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                const resUserToken = res.body.token;\r\n                chai.expect(resUserToken).to.not.be.null;\r\n\r\n                const redisToken = await redisGetAsync(`auth_${resUserToken}`)\r\n                chai.expect(redisToken).to.not.be.null;\r\n                chai.expect(initialUserId).to.equal(redisToken);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /disconnect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /disconnect with an incorrect token', (done) => {\r\n        redisKeysAsync('auth_*')\r\n        .then((keys) => {\r\n            chai.expect(keys.length).to.equal(1);\r\n\r\n            chai.request('http://localhost:5000')\r\n                .get('/disconnect')\r\n                .set('X-Token', \"nope\")\r\n                .end(async (err, res) => {\r\n                    chai.expect(err).to.be.null;\r\n                    chai.expect(res).to.have.status(401);\r\n\r\n                    const resError = res.body.error;\r\n                    chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                    const authKeys = await redisKeysAsync('auth_*');\r\n                    chai.expect(authKeys.length).to.equal(1);\r\n\r\n                    done();\r\n                });\r\n        });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /disconnect', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /disconnect with an correct token', (done) => {\r\n        redisKeysAsync('auth_*')\r\n        .then((keys) => {\r\n            chai.expect(keys.length).to.equal(1);\r\n\r\n            chai.request('http://localhost:5000')\r\n                .get('/disconnect')\r\n                .set('X-Token', initialUserToken)\r\n                .end(async (err, res) => {\r\n                    chai.expect(err).to.be.null;\r\n                    chai.expect(res).to.have.status(204);\r\n\r\n                    const authKeys = await redisKeysAsync('auth_*');\r\n                    chai.expect(authKeys.length).to.equal(0);\r\n\r\n                    done();\r\n                });\r\n        });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users/me', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /users/me with no token', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/users/me')\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users/me', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /users/me with incorrect token', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/users/me')\r\n            .set('X-Token', \"nope\")\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /users/me', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /users/me with an correct token', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get('/users/me')\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resUser = res.body;\r\n                chai.expect(resUser.email).to.equal(initialUser.email);\r\n                chai.expect(resUser.id).to.equal(initialUserId);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n//----------------- task5\r\n\r\ndescribe('------------------\\nTASK 5\\nPOST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files invalid token user', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'folder'\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', `${initialUserToken}_121`)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files with missing name', (done) => {\r\n        const fileData = {\r\n            type: 'folder'\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Missing name\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files with missing type', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString()\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Missing type\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files with missing data if type != folder', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'file'\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Missing data\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files with invalid parentId', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'folder',\r\n            parentId: initialUserId\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Parent not found\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(0);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFakeFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: \"newFolder\",\r\n                    type: \"file\",\r\n                    data: Buffer.from(\"hello\", 'binary').toString('base64'),\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFakeFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files with a parentId not a folder', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'folder',\r\n            parentId: initialFolderId\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Parent is not a folder\");\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files creates a folder at the root', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'folder',\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(fileData.name);\r\n                chai.expect(resFile.userId).to.equal(initialUserId);\r\n                chai.expect(resFile.type).to.equal(fileData.type);\r\n                chai.expect(resFile.parentId).to.equal(0);\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n                        const docFile = docs[0];\r\n                        chai.expect(docFile.name).to.equal(fileData.name);\r\n                        chai.expect(docFile._id.toString()).to.equal(resFile.id);\r\n                        chai.expect(docFile.userId.toString()).to.equal(initialUserId);\r\n                        chai.expect(docFile.type).to.equal(fileData.type);\r\n                        chai.expect(docFile.parentId.toString()).to.equal('0');\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: \"newFolder\",\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('POST /files creates a folder inside a folder', (done) => {\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'folder',\r\n            parentId: initialFolderId\r\n        }\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(fileData.name);\r\n                chai.expect(resFile.userId).to.equal(initialUserId);\r\n                chai.expect(resFile.type).to.equal(fileData.type);\r\n                chai.expect(resFile.parentId).to.equal(initialFolderId);\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(2);\r\n\r\n                        const docFile = docs.filter((i) => i._id.toString() == resFile.id.toString())[0];\r\n                        chai.expect(docFile.name).to.equal(fileData.name);\r\n                        chai.expect(docFile._id.toString()).to.equal(resFile.id);\r\n                        chai.expect(docFile.userId.toString()).to.equal(initialUserId);\r\n                        chai.expect(docFile.type).to.equal(fileData.type);\r\n                        chai.expect(docFile.parentId.toString()).to.equal(initialFolderId);\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('POST /files creates a file at the root', (done) => {\r\n        const fileClearContent = fctRandomString();\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'file',\r\n            data: Buffer.from(fileClearContent, 'binary').toString('base64')\r\n        }\r\n\r\n        let filesInTmpFilesManager = [];\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            filesInTmpFilesManager = fs.readdirSync(folderTmpFilesManagerPath);\r\n        }\r\n\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(fileData.name);\r\n                chai.expect(resFile.userId).to.equal(initialUserId);\r\n                chai.expect(resFile.type).to.equal(fileData.type);\r\n                chai.expect(resFile.parentId).to.equal(0);\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(1);\r\n                        const docFile = docs[0];\r\n                        chai.expect(docFile.name).to.equal(fileData.name);\r\n                        chai.expect(docFile._id.toString()).to.equal(resFile.id);\r\n                        chai.expect(docFile.userId.toString()).to.equal(initialUserId);\r\n                        chai.expect(docFile.type).to.equal(fileData.type);\r\n                        chai.expect(docFile.parentId.toString()).to.equal('0');\r\n\r\n                        let newFilesInTmpFilesManager = [];\r\n                        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n                            newFilesInTmpFilesManager = fs.readdirSync(folderTmpFilesManagerPath);\r\n                        }\r\n                        chai.expect(newFilesInTmpFilesManager.length).to.equal(filesInTmpFilesManager.length + 1);\r\n                        const newFileInDiskPath = newFilesInTmpFilesManager.filter(x => !filesInTmpFilesManager.includes(x));\r\n\r\n                        const newFileInDiskContent = fs.readFileSync(`${folderTmpFilesManagerPath}/${newFileInDiskPath[0]}`).toString();\r\n                        chai.expect(newFileInDiskContent).to.equal(fileClearContent);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('POST /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: \"newFolder\",\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('POST /files creates a file inside a folder', (done) => {\r\n        const fileClearContent = fctRandomString();\r\n        const fileData = {\r\n            name: fctRandomString(),\r\n            type: 'file',\r\n            data: Buffer.from(fileClearContent, 'binary').toString('base64'),\r\n            parentId: initialFolderId\r\n        }\r\n\r\n        let filesInTmpFilesManager = [];\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            filesInTmpFilesManager = fs.readdirSync(folderTmpFilesManagerPath);\r\n        }\r\n\r\n        chai.request('http://localhost:5000')\r\n            .post('/files')\r\n            .set('X-Token', initialUserToken)\r\n            .send(fileData)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(201);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(fileData.name);\r\n                chai.expect(resFile.userId).to.equal(initialUserId);\r\n                chai.expect(resFile.type).to.equal(fileData.type);\r\n                chai.expect(resFile.parentId).to.equal(initialFolderId);\r\n\r\n                testClientDb.collection('files')\r\n                    .find({})\r\n                    .toArray((err, docs) => {\r\n                        chai.expect(err).to.be.null;\r\n                        chai.expect(docs.length).to.equal(2);\r\n\r\n                        const docFile = docs.filter((i) => i._id.toString() == resFile.id.toString())[0];\r\n                        chai.expect(docFile.name).to.equal(fileData.name);\r\n                        chai.expect(docFile._id.toString()).to.equal(resFile.id);\r\n                        chai.expect(docFile.userId.toString()).to.equal(initialUserId);\r\n                        chai.expect(docFile.type).to.equal(fileData.type);\r\n                        chai.expect(docFile.parentId.toString()).to.equal(initialFolderId);\r\n\r\n                        let newFilesInTmpFilesManager = [];\r\n                        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n                            newFilesInTmpFilesManager = fs.readdirSync(folderTmpFilesManagerPath);\r\n                        }\r\n                        chai.expect(newFilesInTmpFilesManager.length).to.equal(filesInTmpFilesManager.length + 1);\r\n                        const newFileInDiskPath = newFilesInTmpFilesManager.filter(x => !filesInTmpFilesManager.includes(x));\r\n\r\n                        const newFileInDiskContent = fs.readFileSync(`${folderTmpFilesManagerPath}/${newFileInDiskPath[0]}`).toString();\r\n                        chai.expect(newFileInDiskContent).to.equal(fileClearContent);\r\n\r\n                        done();\r\n                    })\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n//----------------- task6\r\n\r\ndescribe('------------------\\nTASK 6\\nGET /files/:id', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files/:id invalid token user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFolderId}`)\r\n            .set('X-Token', `${initialUserToken}_121`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files/:id with no file linked to :id', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${new ObjectID()}`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: new ObjectID(),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files/:id with no file linked to :id for this user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFolderId}`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolder = null;\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files/:id with correct :id of the owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFolderId}`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(initialFolder.name);\r\n                chai.expect(resFile.type).to.equal(initialFolder.type);\r\n                chai.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\r\n                chai.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files invalid token user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .set('X-Token', `${initialUserToken}_121`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFiles = [];\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add folders\r\n                for(let i = 0 ; i < 25 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: '0'\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFiles.push(item)\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files with no parentId and no page', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resList = res.body;\r\n                chai.expect(resList.length).to.equal(20);\r\n\r\n                resList.forEach((item) => {\r\n                    const itemIdx = initialFiles.findIndex((i) => i.id == item.id);\r\n                    chai.assert.isAtLeast(itemIdx, 0);\r\n\r\n                    const itemInit = initialFiles.splice(itemIdx, 1)[0];\r\n                    chai.expect(itemInit).to.not.be.null;\r\n\r\n                    chai.expect(itemInit.id).to.equal(item.id);\r\n                    chai.expect(itemInit.name).to.equal(item.name);\r\n                    chai.expect(itemInit.type).to.equal(item.type);\r\n                    chai.expect(itemInit.parentId).to.equal(item.parentId);\r\n                });\r\n\r\n                chai.expect(initialFiles.length).to.equal(5);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFiles = [];\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add folders\r\n                for(let i = 0 ; i < 25 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: '0'\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFiles.push(item)\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files with a wrong parentId and no page', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .set('X-Token', initialUserToken)\r\n            .query({ parentId: new ObjectID().toString() })\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resList = res.body;\r\n                chai.expect(resList.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFiles = [];\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add folders\r\n                const initialFolders = []\r\n                for(let i = 0 ; i < 25 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: '0'\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFolders.push(item)\r\n                }\r\n\r\n                // Add 2 folders inside a folder\r\n                for(let i = 0 ; i < 2 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: ObjectID(initialFolders[0].id)\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFiles.push(item)\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files with a valid parentId and no page', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .query({ parentId: initialFiles[0].parentId.toString() })\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resList = res.body;\r\n                chai.expect(resList.length).to.equal(2);\r\n\r\n                resList.forEach((item) => {\r\n                    const itemIdx = initialFiles.findIndex((i) => i.id == item.id);\r\n                    chai.assert.isAtLeast(itemIdx, 0);\r\n\r\n                    const itemInit = initialFiles.splice(itemIdx, 1)[0];\r\n                    chai.expect(itemInit).to.not.be.null;\r\n\r\n                    chai.expect(itemInit.id).to.equal(item.id);\r\n                    chai.expect(itemInit.name).to.equal(item.name);\r\n                    chai.expect(itemInit.type).to.equal(item.type);\r\n                    chai.expect(itemInit.parentId.toString()).to.equal(item.parentId.toString());\r\n                });\r\n\r\n                chai.expect(initialFiles.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFiles = [];\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add folders\r\n                for(let i = 0 ; i < 25 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: '0'\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFiles.push(item)\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files with no parentId and second page', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .query({ page: 1 })\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resList = res.body;\r\n                chai.expect(resList.length).to.equal(5);\r\n\r\n                resList.forEach((item) => {\r\n                    const itemIdx = initialFiles.findIndex((i) => i.id == item.id);\r\n                    chai.assert.isAtLeast(itemIdx, 0);\r\n\r\n                    const itemInit = initialFiles.splice(itemIdx, 1)[0];\r\n                    chai.expect(itemInit).to.not.be.null;\r\n\r\n                    chai.expect(itemInit.id).to.equal(item.id);\r\n                    chai.expect(itemInit.name).to.equal(item.name);\r\n                    chai.expect(itemInit.type).to.equal(item.type);\r\n                    chai.expect(itemInit.parentId).to.equal(item.parentId);\r\n                });\r\n\r\n                chai.expect(initialFiles.length).to.equal(20);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFiles = [];\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add folders\r\n                for(let i = 0 ; i < 25 ; i += 1) {\r\n                    const item = {\r\n                        userId: ObjectID(initialUserId),\r\n                        name: fctRandomString(),\r\n                        type: \"folder\",\r\n                        parentId: '0'\r\n                    };\r\n                    const createdFileDocs = await testClientDb.collection('files').insertOne(item);\r\n                    if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                        item.id = createdFileDocs.ops[0]._id.toString();\r\n                    }\r\n                    initialFiles.push(item)\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('GET /files with no parentId and a page too far', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files`)\r\n            .query({ page: 10 })\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resList = res.body;\r\n                chai.expect(resList.length).to.equal(0);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n//----------------- task7\r\n\r\ndescribe('------------------\\nTASK 7\\nPUT /files/:id/publish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/publish invalid token user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/publish`)\r\n            .set('X-Token', `${initialUserToken}_121`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('PUT /files/:id/publish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/publish with no file linked to :id', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${new ObjectID()}/publish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('PUT /files/:id/publish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: new ObjectID(),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/publish with no file linked to :id for this user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/publish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('PUT /files/:id/publish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolder = null;\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: false\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/publish with correct :id of the owner - file not published yet', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/publish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(initialFolder.name);\r\n                chai.expect(resFile.type).to.equal(initialFolder.type);\r\n                chai.expect(resFile.isPublic).to.true\r\n                chai.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\r\n                chai.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n\r\ndescribe('PUT /files/:id/publish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolder = null;\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: true\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/publish with correct :id of the owner - file already published yet', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/publish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(initialFolder.name);\r\n                chai.expect(resFile.type).to.equal(initialFolder.type);\r\n                chai.expect(resFile.isPublic).to.true\r\n                chai.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\r\n                chai.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('PUT /files/:id/unpublish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/unpublish invalid token user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/unpublish`)\r\n            .set('X-Token', `${initialUserToken}_121`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(401);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Unauthorized\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('PUT /files/:id/unpublish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/unpublish with no file linked to :id', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${new ObjectID()}/unpublish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('PUT /files/:id/unpublish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                const initialFolder = {\r\n                    userId: new ObjectID(),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0'\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/unpublish with no file linked to :id for this user', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/unpublish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('PUT /files/:id/unpublish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolder = null;\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: false\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/unpublish with correct :id of the owner - file not published yet', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/unpublish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(initialFolder.name);\r\n                chai.expect(resFile.type).to.equal(initialFolder.type);\r\n                chai.expect(resFile.isPublic).to.false\r\n                chai.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\r\n                chai.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('PUT /files/:id/unpublish', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFolder = null;\r\n    let initialFolderId = null;\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder\r\n                initialFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: true\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFolder);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFolderId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n    });\r\n\r\n    it('PUT /files/:id/unpublish with correct :id of the owner - file already published yet', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .put(`/files/${initialFolderId}/unpublish`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n\r\n                const resFile = res.body;\r\n                chai.expect(resFile.name).to.equal(initialFolder.name);\r\n                chai.expect(resFile.type).to.equal(initialFolder.type);\r\n                chai.expect(resFile.isPublic).to.false\r\n                chai.expect(resFile.parentId.toString()).to.equal(initialFolder.parentId.toString());\r\n                chai.expect(resFile.userId.toString()).to.equal(initialFolder.userId.toString());\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\n\r\n//----------------- task8\r\n\r\ndescribe('------------------\\nTASK 8\\nGET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, `Hello-${uuidv4()}`);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with no file linked to :id', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${new ObjectID()}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n\r\n    let fileUser = null;\r\n    let fileUserId = null;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n\r\n    let initialFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 user owner of file\r\n                fileUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\r\n                if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\r\n                    fileUserId = createdUserFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, `Hello-${uuidv4()}`);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file linked to :id but user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let fileUser = null;\r\n    let fileUserId = null;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 user owner of file\r\n                fileUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\r\n                if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\r\n                    fileUserId = createdUserFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, `Hello-${uuidv4()}`);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file linked to :id but user authenticated and not owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFileId = null;\r\n    let initialFileContent = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                initialFileContent = `Hello-${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, initialFileContent);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .buffer()\r\n            .parse((res, cb) => {\r\n                res.setEncoding(\"binary\");\r\n                res.data = \"\";\r\n                res.on(\"data\", (chunk) => {\r\n                    res.data += chunk;\r\n                });\r\n                res.on(\"end\", () => {\r\n                    cb(null, new Buffer(res.data, \"binary\"));\r\n                });\r\n            })\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                chai.expect(res.body.toString()).to.equal(initialFileContent);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n\r\n    let initialFileId = null;\r\n    let initialFileContent = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                initialFileContent = `Hello-${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, initialFileContent);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with a published file linked to :id and user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .buffer()\r\n            .parse((res, cb) => {\r\n                res.setEncoding(\"binary\");\r\n                res.data = \"\";\r\n                res.on(\"data\", (chunk) => {\r\n                    res.data += chunk;\r\n                });\r\n                res.on(\"end\", () => {\r\n                    cb(null, new Buffer(res.data, \"binary\"));\r\n                });\r\n            })\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                chai.expect(res.body.toString()).to.equal(initialFileContent);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let fileUser = null;\r\n    let fileUserId = null;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFileId = null;\r\n    let initialFileContent = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 user owner of file\r\n                fileUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\r\n                if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\r\n                    fileUserId = createdUserFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                initialFileContent = `Hello-${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, initialFileContent);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with a published file linked to :id and user authenticated but not owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .buffer()\r\n            .parse((res, cb) => {\r\n                res.setEncoding(\"binary\");\r\n                res.data = \"\";\r\n                res.on(\"data\", (chunk) => {\r\n                    res.data += chunk;\r\n                });\r\n                res.on(\"end\", () => {\r\n                    cb(null, new Buffer(res.data, \"binary\"));\r\n                });\r\n            })\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                chai.expect(res.body.toString()).to.equal(initialFileContent);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialFileId = null;\r\n    let initialFileContent = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file\r\n                fctCreateTmp();\r\n                const fileLocalPath = `${folderTmpFilesManagerPath}/${uuidv4()}`;\r\n                initialFileContent = `Hello-${uuidv4()}`;\r\n                fs.writeFileSync(fileLocalPath, initialFileContent);\r\n\r\n                const initialFile = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: fileLocalPath\r\n                };\r\n                const createdFileDocs = await testClientDb.collection('files').insertOne(initialFile);\r\n                if (createdFileDocs && createdFileDocs.ops.length > 0) {\r\n                    initialFileId = createdFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with a published file linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialFileId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .buffer()\r\n            .parse((res, cb) => {\r\n                res.setEncoding(\"binary\");\r\n                res.data = \"\";\r\n                res.on(\"data\", (chunk) => {\r\n                    res.data += chunk;\r\n                });\r\n                res.on(\"end\", () => {\r\n                    cb(null, new Buffer(res.data, \"binary\"));\r\n                });\r\n            })\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(200);\r\n                chai.expect(res.body.toString()).to.equal(initialFileContent);\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n\r\n    let initialUnpublishedFolderId = null;\r\n    let initialPublishedFolderId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder unpublished\r\n                const initialUnpublishedFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: false\r\n                };\r\n                const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\r\n                if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\r\n                    initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder published\r\n                const initialPublishedFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: true\r\n                };\r\n                const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\r\n                if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\r\n                    initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished folder linked to :id but user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFolderId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with a published folder linked to :id but user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFolderId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"A folder doesn't have content\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let fileUser = null;\r\n    let fileUserId = null;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialUnpublishedFolderId = null;\r\n    let initialPublishedFolderId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 user owner of file\r\n                fileUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\r\n                if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\r\n                    fileUserId = createdUserFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder unpublished\r\n                const initialUnpublishedFolder = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: false\r\n                };\r\n                const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\r\n                if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\r\n                    initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder published\r\n                const initialPublishedFolder = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: true\r\n                };\r\n                const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\r\n                if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\r\n                    initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished folder linked to :id but user authenticated and not owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFolderId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with a published folder linked to :id but user authenticated and not owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFolderId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"A folder doesn't have content\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialUnpublishedFolderId = null;\r\n    let initialPublishedFolderId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder unpublished\r\n                const initialUnpublishedFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: false\r\n                };\r\n                const createdUFolderDocs = await testClientDb.collection('files').insertOne(initialUnpublishedFolder);\r\n                if (createdUFolderDocs && createdUFolderDocs.ops.length > 0) {\r\n                    initialUnpublishedFolderId = createdUFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 folder published\r\n                const initialPublishedFolder = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"folder\",\r\n                    parentId: '0',\r\n                    isPublic: true\r\n                };\r\n                const createdPFolderDocs = await testClientDb.collection('files').insertOne(initialPublishedFolder);\r\n                if (createdPFolderDocs && createdPFolderDocs.ops.length > 0) {\r\n                    initialPublishedFolderId = createdPFolderDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveAllRedisKeys();\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished folder linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFolderId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"A folder doesn't have content\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with a published folder linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFolderId}/data`)\r\n            .set('X-Token', initialUserToken)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(400);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"A folder doesn't have content\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n\r\n    let initialUnpublishedFileId = null;\r\n    let initialPublishedFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file publish\r\n                fctCreateTmp();\r\n                const initialFileP = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\r\n                if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\r\n                    initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file unpublish\r\n                const initialFileUP = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\r\n                if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\r\n                    initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file not present locally linked to :id and user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with a published file not present locally linked to :id and user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let fileUser = null;\r\n    let fileUserId = null;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialUnpublishedFileId = null;\r\n    let initialPublishedFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 user owner of file\r\n                fileUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdUserFileDocs = await testClientDb.collection('users').insertOne(fileUser);\r\n                if (createdUserFileDocs && createdUserFileDocs.ops.length > 0) {\r\n                    fileUserId = createdUserFileDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file publish\r\n                fctCreateTmp();\r\n                const initialFileP = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\r\n                if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\r\n                    initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file unpublish\r\n                const initialFileUP = {\r\n                    userId: ObjectID(fileUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\r\n                if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\r\n                    initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file not present locally linked to :id and user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with a published file not present locally linked to :id and user unauthenticated', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\ndescribe('GET /files/:id/data', () => {\r\n    let testClientDb;\r\n    let testRedisClient;\r\n    let redisDelAsync;\r\n    let redisGetAsync;\r\n    let redisSetAsync;\r\n    let redisKeysAsync;\r\n\r\n    let initialUser = null;\r\n    let initialUserId = null;\r\n    let initialUserToken = null;\r\n\r\n    let initialUnpublishedFileId = null;\r\n    let initialPublishedFileId = null;\r\n\r\n    const folderTmpFilesManagerPath = process.env.FOLDER_PATH || '/tmp/files_manager';\r\n\r\n    const fctRandomString = () => {\r\n        return Math.random().toString(36).substring(2, 15);\r\n    }\r\n    const fctRemoveAllRedisKeys = async () => {\r\n        const keys = await redisKeysAsync('auth_*');\r\n        keys.forEach(async (key) => {\r\n            await redisDelAsync(key);\r\n        });\r\n    }\r\n    const fctCreateTmp = () => {\r\n        if (!fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.mkdirSync(folderTmpFilesManagerPath);\r\n        }\r\n    }\r\n    const fctRemoveTmp = () => {\r\n        if (fs.existsSync(folderTmpFilesManagerPath)) {\r\n            fs.readdirSync(`${folderTmpFilesManagerPath}/`).forEach((i) => {\r\n                fs.unlinkSync(`${folderTmpFilesManagerPath}/${i}`)\r\n            })\r\n        }\r\n    }\r\n\r\n    beforeEach(() => {\r\n        const dbInfo = {\r\n            host: process.env.DB_HOST || 'localhost',\r\n            port: process.env.DB_PORT || '27017',\r\n            database: process.env.DB_DATABASE || 'files_manager'\r\n        };\r\n        return new Promise((resolve) => {\r\n            fctRemoveTmp();\r\n            MongoClient.connect(`mongodb://${dbInfo.host}:${dbInfo.port}/${dbInfo.database}`, async (err, client) => {\r\n                testClientDb = client.db(dbInfo.database);\r\n\r\n                await testClientDb.collection('users').deleteMany({})\r\n                await testClientDb.collection('files').deleteMany({})\r\n\r\n                // Add 1 user\r\n                initialUser = {\r\n                    email: `${fctRandomString()}@me.com`,\r\n                    password: sha1(fctRandomString())\r\n                }\r\n                const createdDocs = await testClientDb.collection('users').insertOne(initialUser);\r\n                if (createdDocs && createdDocs.ops.length > 0) {\r\n                    initialUserId = createdDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file publish\r\n                fctCreateTmp();\r\n                const initialFileP = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: true,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFilePDocs = await testClientDb.collection('files').insertOne(initialFileP);\r\n                if (createdFilePDocs && createdFilePDocs.ops.length > 0) {\r\n                    initialPublishedFileId = createdFilePDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                // Add 1 file unpublish\r\n                const initialFileUP = {\r\n                    userId: ObjectID(initialUserId),\r\n                    name: fctRandomString(),\r\n                    type: \"file\",\r\n                    parentId: '0',\r\n                    isPublic: false,\r\n                    localPath: `${folderTmpFilesManagerPath}/${uuidv4()}`\r\n                };\r\n                const createdFileUPDocs = await testClientDb.collection('files').insertOne(initialFileUP);\r\n                if (createdFileUPDocs && createdFileUPDocs.ops.length > 0) {\r\n                    initialUnpublishedFileId = createdFileUPDocs.ops[0]._id.toString();\r\n                }\r\n\r\n                testRedisClient = redis.createClient();\r\n                redisDelAsync = promisify(testRedisClient.del).bind(testRedisClient);\r\n                redisGetAsync = promisify(testRedisClient.get).bind(testRedisClient);\r\n                redisSetAsync = promisify(testRedisClient.set).bind(testRedisClient);\r\n                redisKeysAsync = promisify(testRedisClient.keys).bind(testRedisClient);\r\n                testRedisClient.on('connect', async () => {\r\n                    fctRemoveAllRedisKeys();\r\n\r\n                    // Set token for this user\r\n                    initialUserToken = uuidv4()\r\n                    await redisSetAsync(`auth_${initialUserToken}`, initialUserId)\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    afterEach(() => {\r\n        fctRemoveTmp();\r\n    });\r\n\r\n    it('GET /files/:id/data with an unpublished file not present locally linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialUnpublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n\r\n    it('GET /files/:id/data with an published file not present locally linked to :id and user authenticated and owner', (done) => {\r\n        chai.request('http://localhost:5000')\r\n            .get(`/files/${initialPublishedFileId}/data`)\r\n            .end(async (err, res) => {\r\n                chai.expect(err).to.be.null;\r\n                chai.expect(res).to.have.status(404);\r\n\r\n                const resError = res.body.error;\r\n                chai.expect(resError).to.equal(\"Not found\");\r\n\r\n                done();\r\n            });\r\n    }).timeout(30000);\r\n});\r\n\r\nconsole.log(\"----\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1710308348410},"{\"assumptions\":{},\"sourceRoot\":\"/home/ali/ali/alx-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ali/ali/alx-files_manager\",\"filename\":\"/home/ali/ali/alx-files_manager/controllers/AuthController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ali/ali/alx-files_manager\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.0:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _uuid = require(\"uuid\");\nvar _crypto = require(\"crypto\");\nvar _db = _interopRequireDefault(require(\"../utils/db\"));\nvar _redis = _interopRequireDefault(require(\"../utils/redis\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } // AuthController.js\nvar AuthController = /*#__PURE__*/function () {\n  function AuthController() {\n    _classCallCheck(this, AuthController);\n  }\n  _createClass(AuthController, null, [{\n    key: \"getConnect\",\n    value: function () {\n      var _getConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n        var authHeader, encodedCredentials, credentials, _credentials$split, _credentials$split2, email, password, hashedPassword, user, token, key;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              authHeader = req.headers.authorization;\n              if (!(!authHeader || !authHeader.startsWith('Basic '))) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 3:\n              encodedCredentials = authHeader.slice('Basic '.length);\n              credentials = Buffer.from(encodedCredentials, 'base64').toString('utf-8');\n              _credentials$split = credentials.split(':'), _credentials$split2 = _slicedToArray(_credentials$split, 2), email = _credentials$split2[0], password = _credentials$split2[1];\n              hashedPassword = (0, _crypto.createHash)('sha1').update(password).digest('hex');\n              _context.next = 9;\n              return _db[\"default\"].db.collection('users').findOne({\n                email: email,\n                password: hashedPassword\n              });\n            case 9:\n              user = _context.sent;\n              if (user) {\n                _context.next = 12;\n                break;\n              }\n              return _context.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 12:\n              token = (0, _uuid.v4)();\n              key = \"auth_\".concat(token);\n              _redis[\"default\"].set(key, user._id.toString(), 'EX', 86400);\n              return _context.abrupt(\"return\", res.status(200).json({\n                token: token\n              }));\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function getConnect(_x, _x2) {\n        return _getConnect.apply(this, arguments);\n      }\n      return getConnect;\n    }()\n  }, {\n    key: \"getDisconnect\",\n    value: function () {\n      var _getDisconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n        var token, key, userId;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = req.headers['x-token'];\n              if (token) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 3:\n              key = \"auth_\".concat(token);\n              _context2.next = 6;\n              return _redis[\"default\"].get(key);\n            case 6:\n              userId = _context2.sent;\n              if (userId) {\n                _context2.next = 9;\n                break;\n              }\n              return _context2.abrupt(\"return\", res.status(401).json({\n                error: 'Unauthorized'\n              }));\n            case 9:\n              _redis[\"default\"].del(key);\n              return _context2.abrupt(\"return\", res.status(204).end());\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getDisconnect(_x3, _x4) {\n        return _getDisconnect.apply(this, arguments);\n      }\n      return getDisconnect;\n    }()\n  }]);\n  return AuthController;\n}();\nvar _default = exports[\"default\"] = AuthController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdXVpZCIsInJlcXVpcmUiLCJfY3J5cHRvIiwiX2RiIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZWRpcyIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZSIsInQiLCJyIiwiT2JqZWN0IiwibiIsImhhc093blByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJhIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ3cmFwIiwiR2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsInR5cGUiLCJhcmciLCJjYWxsIiwiaCIsImwiLCJmIiwicyIsInkiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwicCIsImQiLCJnZXRQcm90b3R5cGVPZiIsInYiLCJ2YWx1ZXMiLCJnIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiaW52b2tlIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJuYW1lIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJfY2F0Y2giLCJkZWxlZ2F0ZVlpZWxkIiwiX3NsaWNlZFRvQXJyYXkiLCJhcnIiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJsZW4iLCJhcnIyIiwiaXNBcnJheSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiaW5mbyIsImVycm9yIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJfdG9Qcm9wZXJ0eUtleSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl90b1ByaW1pdGl2ZSIsIlN0cmluZyIsInRvUHJpbWl0aXZlIiwiTnVtYmVyIiwiQXV0aENvbnRyb2xsZXIiLCJfZ2V0Q29ubmVjdCIsIl9jYWxsZWUiLCJyZXEiLCJyZXMiLCJhdXRoSGVhZGVyIiwiZW5jb2RlZENyZWRlbnRpYWxzIiwiY3JlZGVudGlhbHMiLCJfY3JlZGVudGlhbHMkc3BsaXQiLCJfY3JlZGVudGlhbHMkc3BsaXQyIiwiZW1haWwiLCJwYXNzd29yZCIsImhhc2hlZFBhc3N3b3JkIiwidXNlciIsInRva2VuIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhcnRzV2l0aCIsInN0YXR1cyIsImpzb24iLCJCdWZmZXIiLCJzcGxpdCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJkYkNsaWVudCIsImRiIiwiY29sbGVjdGlvbiIsImZpbmRPbmUiLCJ1dWlkdjQiLCJjb25jYXQiLCJyZWRpc0NsaWVudCIsInNldCIsIl9pZCIsImdldENvbm5lY3QiLCJfeCIsIl94MiIsIl9nZXREaXNjb25uZWN0IiwiX2NhbGxlZTIiLCJ1c2VySWQiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJnZXQiLCJkZWwiLCJlbmQiLCJnZXREaXNjb25uZWN0IiwiX3gzIiwiX3g0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9hbGkvYWxpL2FseC1maWxlc19tYW5hZ2VyL2NvbnRyb2xsZXJzLyIsInNvdXJjZXMiOlsiQXV0aENvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXV0aENvbnRyb2xsZXIuanNcblxuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyBjcmVhdGVIYXNoIH0gZnJvbSAnY3J5cHRvJztcbmltcG9ydCBkYkNsaWVudCBmcm9tICcuLi91dGlscy9kYic7XG5pbXBvcnQgcmVkaXNDbGllbnQgZnJvbSAnLi4vdXRpbHMvcmVkaXMnO1xuXG5jbGFzcyBBdXRoQ29udHJvbGxlciB7XG4gIHN0YXRpYyBhc3luYyBnZXRDb25uZWN0KHJlcSwgcmVzKSB7XG4gICAgY29uc3QgYXV0aEhlYWRlciA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb247XG4gICAgaWYgKCFhdXRoSGVhZGVyIHx8ICFhdXRoSGVhZGVyLnN0YXJ0c1dpdGgoJ0Jhc2ljICcpKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ1VuYXV0aG9yaXplZCcgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgZW5jb2RlZENyZWRlbnRpYWxzID0gYXV0aEhlYWRlci5zbGljZSgnQmFzaWMgJy5sZW5ndGgpO1xuICAgIGNvbnN0IGNyZWRlbnRpYWxzID0gQnVmZmVyLmZyb20oZW5jb2RlZENyZWRlbnRpYWxzLCAnYmFzZTY0JykudG9TdHJpbmcoJ3V0Zi04Jyk7XG4gICAgY29uc3QgW2VtYWlsLCBwYXNzd29yZF0gPSBjcmVkZW50aWFscy5zcGxpdCgnOicpO1xuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gY3JlYXRlSGFzaCgnc2hhMScpLnVwZGF0ZShwYXNzd29yZCkuZGlnZXN0KCdoZXgnKTtcblxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBkYkNsaWVudC5kYi5jb2xsZWN0aW9uKCd1c2VycycpLmZpbmRPbmUoeyBlbWFpbCwgcGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkIH0pO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gdXVpZHY0KCk7XG4gICAgY29uc3Qga2V5ID0gYGF1dGhfJHt0b2tlbn1gO1xuICAgIHJlZGlzQ2xpZW50LnNldChrZXksIHVzZXIuX2lkLnRvU3RyaW5nKCksICdFWCcsIDg2NDAwKTtcblxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHRva2VuIH0pO1xuICB9XG5cbiAgc3RhdGljIGFzeW5jIGdldERpc2Nvbm5lY3QocmVxLCByZXMpIHtcbiAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzWyd4LXRva2VuJ107XG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGtleSA9IGBhdXRoXyR7dG9rZW59YDtcbiAgICBjb25zdCB1c2VySWQgPSBhd2FpdCByZWRpc0NsaWVudC5nZXQoa2V5KTtcbiAgICBpZiAoIXVzZXJJZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0pO1xuICAgIH1cblxuICAgIHJlZGlzQ2xpZW50LmRlbChrZXkpO1xuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjA0KS5lbmQoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRoQ29udHJvbGxlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsS0FBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsT0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsR0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksTUFBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQXlDLFNBQUFHLHVCQUFBRSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFBQSxTQUFBRSxRQUFBQyxDQUFBLHNDQUFBRCxPQUFBLHdCQUFBRSxNQUFBLHVCQUFBQSxNQUFBLENBQUFDLFFBQUEsYUFBQUYsQ0FBQSxrQkFBQUEsQ0FBQSxnQkFBQUEsQ0FBQSxXQUFBQSxDQUFBLHlCQUFBQyxNQUFBLElBQUFELENBQUEsQ0FBQUcsV0FBQSxLQUFBRixNQUFBLElBQUFELENBQUEsS0FBQUMsTUFBQSxDQUFBRyxTQUFBLHFCQUFBSixDQUFBLEtBQUFELE9BQUEsQ0FBQUMsQ0FBQTtBQUFBLFNBQUFLLG9CQUFBLGtCQUp6QyxxSkFBQUEsbUJBQUEsWUFBQUEsb0JBQUEsV0FBQUMsQ0FBQSxTQUFBQyxDQUFBLEVBQUFELENBQUEsT0FBQUUsQ0FBQSxHQUFBQyxNQUFBLENBQUFM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","map":{"version":3,"names":["_uuid","require","_crypto","_db","_interopRequireDefault","_redis","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","AuthController","_getConnect","_callee","req","res","authHeader","encodedCredentials","credentials","_credentials$split","_credentials$split2","email","password","hashedPassword","user","token","_callee$","_context","headers","authorization","startsWith","status","json","Buffer","split","createHash","update","digest","dbClient","db","collection","findOne","uuidv4","concat","redisClient","set","_id","getConnect","_x","_x2","_getDisconnect","_callee2","userId","_callee2$","_context2","get","del","end","getDisconnect","_x3","_x4","_default","exports"],"sourceRoot":"/home/ali/ali/alx-files_manager/controllers/","sources":["AuthController.js"],"sourcesContent":["// AuthController.js\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { createHash } from 'crypto';\nimport dbClient from '../utils/db';\nimport redisClient from '../utils/redis';\n\nclass AuthController {\n  static async getConnect(req, res) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader || !authHeader.startsWith('Basic ')) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const encodedCredentials = authHeader.slice('Basic '.length);\n    const credentials = Buffer.from(encodedCredentials, 'base64').toString('utf-8');\n    const [email, password] = credentials.split(':');\n    const hashedPassword = createHash('sha1').update(password).digest('hex');\n\n    const user = await dbClient.db.collection('users').findOne({ email, password: hashedPassword });\n    if (!user) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const token = uuidv4();\n    const key = `auth_${token}`;\n    redisClient.set(key, user._id.toString(), 'EX', 86400);\n\n    return res.status(200).json({ token });\n  }\n\n  static async getDisconnect(req, res) {\n    const token = req.headers['x-token'];\n    if (!token) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const key = `auth_${token}`;\n    const userId = await redisClient.get(key);\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    redisClient.del(key);\n\n    return res.status(204).end();\n  }\n}\n\nexport default AuthController;\n"],"mappings":"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","ignoreList":[]}},"mtime":1710341564287}}